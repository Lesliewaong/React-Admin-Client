{"version":3,"sources":["api/ajax.js","api/index.js","assets/images/hat.svg","utils/memoryUtils.js","utils/storageUtils.js","components/link-button/index.jsx","pages/login/index.jsx","utils/dateUtils.js","config/menuConfig.js","components/header/index.jsx","components/left-nav/index.jsx","pages/admin/index.jsx","pages/not-found/index.jsx","pages/admin/user/user-form.jsx","utils/constants.js","pages/admin/user/index.jsx","pages/admin/category/add-form.jsx","pages/admin/category/update-form.jsx","pages/admin/category/index.jsx","pages/admin/home/line.jsx","pages/admin/home/stock.jsx","pages/admin/home/index.jsx","pages/admin/product/index.jsx","pages/admin/role/add-form.jsx","pages/admin/role/auth-form.jsx","pages/admin/role/index.jsx","pages/admin/charts/bar/index.jsx","pages/admin/charts/line/index.jsx","pages/admin/charts/pie/index.jsx","hooks/useDebounce.js","pages/admin/product/home/index.jsx","pages/admin/product/detail/index.jsx","pages/admin/product/add-update/pictures-wall.jsx","pages/admin/product/add-update/rich-text-editor.jsx","pages/admin/product/add-update/index.jsx","App.jsx","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","BASE","reqWeather","key","location","reqCateGories","parentId","reqAddCateGory","categoryName","reqCategory","categoryId","reqProducts","pageNum","pageSize","reqUpdatesProductsStatus","productId","status","reqSearchProducts","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqAddOrUpdateUser","user","USER_KEY","userLogin","saveUser","store","set","getUser","removeUser","remove","LinkButton","props","className","Login","navigate","useNavigate","useState","isRemember","setIsRemember","Form","useForm","form","onFinish","values","a","result","success","console","log","memoryUtils","storageUtils","replace","msg","useEffect","setFieldsValue","resetFields","src","hat","alt","initialValues","remember","onFinishFailed","errorInfo","Item","rules","required","whitespace","max","min","pattern","prefix","UserOutlined","placeholder","validator","_","value","length","Error","test","LockOutlined","valuePropName","noStyle","onChange","v","target","checked","href","htmlType","onClick","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","title","icon","HomeOutlined","AppstoreAddOutlined","children","BarsOutlined","ToolOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartFilled","confirm","Modal","Header","now","setTime","picUrl","setPicUrl","weather","setWeather","path","useLocation","pathname","getWeather","code","text","parseInt","timer","setInterval","clearInterval","getTitle","map","item","ExclamationCircleOutlined","onOk","onCancel","style","color","fontSize","margin","SubMenu","Menu","LeftNav","split","openKey","getMenuNodes","hasAuth","find","cItem","indexOf","to","menus","child","useMemo","selectedKeys","defaultOpenKeys","mode","theme","Footer","Layout","Sider","Content","Admin","minHeight","backgroundColor","textAlign","NotFound","span","Option","Select","UserForm","roles","setForm","phone","email","role_id","labelCol","wrapperCol","label","BASE_IMG_URL","User","users","setUsers","setUser","setRoles","roleNames","setRoleNames","isShow","setIsShow","formData","setFormData","showAdd","columns","dataIndex","render","showUpdate","deleteUser","userId","getUsers","addOrUpdateUser","user1","getFieldsValue","initRoleNames","reduce","pre","bordered","rowKey","dataSource","pagination","defaultPageSize","visible","AddForm","categories","categoryParentId","c","UpdateForm","categoryData","Category","setCategories","subCategories","setSubCategories","loading","setLoading","setParentId","showStatus","setShowStatus","setTitle","setCategoryData","handleCancel","addCategory","getFieldValue","getCategories","updateCategory","extra","PlusOutlined","width","category","showUpadate","showSubCategories","showFirstCategories","ArrowRightOutlined","marginRight","showQuickJumper","getTheme","LineDemo","chartIns","month","monthAverageRain","average","averageData","Object","keys","averageRain","Number","toFixed","scale","sync","alias","colors","colors10","legendMap","height","autoFit","onGetG2Instance","shared","adjust","marginRatio","position","padding","custom","items","marker","symbol","fill","stroke","lineWidth","ev","unchecked","view","views","filter","val","StockDemo","setData","fetch","res","json","dv","DataSet","createView","source","transform","callback","obj","trend","start","end","range","rows","tickCount","volumn","showTitle","showMarkers","itemTpl","region","x","y","shape","tooltip","tickLine","formatter","dateFormat","RangePicker","DatePicker","Home","QuestionCircleOutlined","headStyle","suffix","fontWeight","valueStyle","ArrowDownOutlined","marginLeft","ArrowUpOutlined","defaultValue","moment","format","bodyStyle","ReloadOutlined","Product","AuthForm","getMenus","checkedKeys","setCheckedKeys","treeData","disabled","checkable","defaultExpandAll","onCheck","checkedKeysValue","Role","setRole","selectedRowKeys","setSelectedRowKeys","isShowAdd","setIsShowAdd","isShowAuth","setIsShowAuth","setMenus","create_time","getRoles","addRole","updateRole","auth_time","auth_name","rowSelection","onSelect","onRow","event","Bar","sales","setSales","stores","setStores","sale","push","option","legend","xAxis","yAxis","series","getOption","Line","Pie","subtext","trigger","orient","left","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","useDebounce","fn","delay","dep","setTimeout","clearTimeout","ProductHome","products","setProducts","total","setTotal","setPageNum","undefined","setSearchName","setSearchType","setProductId","productStatus","setProductStatus","price","state","getProducts","list","getProductsbySearch","updateStatus","current","List","ProductDetail","cName1","setCName1","cName2","setCName2","desc","detail","imgs","pCategoryId","ArrowLeftOutlined","getCategory","cN1","all","results","cN2","itemLayout","img","dangerouslySetInnerHTML","__html","PicturesWall","forwardRef","ref","fileList1","index","uid","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","useImperativeHandle","getImgs","file","uploadButton","handleChange","action","accept","listType","onPreview","thumbUrl","footer","RichTextEditor","editorState1","EditorState","createEmpty","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorState","setEditorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","editorStyle","border","paddingLeft","onEditorStateChange","toolbar","image","uploadCallback","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","present","mandatory","TextArea","Input","ProductAddUpdate","pw","useRef","editor","options","setOptions","isUpdate","categoryIds","initOptions","categorys","isLeaf","subCategorys","childOptions","loadData","selectedOptions","targetOption","autosize","minRows","maxRows","addonAfter","App","element","ReactDOM","document","getElementById"],"mappings":"qbAYe,SAASA,EAAKC,GAAyB,IAArBC,EAAoB,uDAAf,GAAGC,EAAY,uDAAP,MAC1C,OAAO,IAAIC,SAAQ,SAACC,EAAQC,IAGd,QAAPH,EACSI,IAAMC,IAAIP,EAAI,CAClBQ,OAAOP,IAGHK,IAAMG,KAAKT,EAAIC,IAInBS,MAAK,SAAAC,GACTP,EAAQO,EAASV,SAGlBW,OAAM,SAAAC,GACLC,IAAQD,MAAM,uCAASA,EAAMC,eCtBzC,IAGaC,EAAW,SAACC,EAAUC,GAAX,OAAwBlB,EAAKmB,SAAe,CAAEF,WAAUC,YAAY,SAE/EE,EAAa,SAACC,EAAKC,GAAN,OAAmBtB,EAAK,6CAA8C,CAAEqB,MAAKC,cAG1FC,EAAgB,SAACC,GAAD,OAAcxB,EAAKmB,wBAA8B,CAAEK,cAEnEC,EAAiB,SAACC,EAAcF,GAAf,OAA4BxB,EAAKmB,uBAA6B,CAAEO,eAAcF,YAAY,SAI3GG,EAAc,SAACC,GAAD,OAAgB5B,EAAKmB,wBAA8B,CAACS,gBAElEC,EAAc,SAACC,EAASC,GAAV,OAAuB/B,EAAKmB,uBAA6B,CAAEW,UAASC,cAElFC,EAA2B,SAACC,EAAWC,GAAZ,OAAuBlC,EAAKmB,+BAAqC,CAAEc,YAAWC,UAAU,SAInHC,EAAoB,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAASC,EAAZ,EAAYA,SAAUK,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,WAAlC,OAC7BrC,EAAKmB,yBAAD,aACAW,UACAC,YACCM,EAAaD,KAGTE,EAAe,SAACC,GAAD,OAAUvC,EAAKmB,qBAA2B,CAACoB,QAAO,SAEjEC,EAAwB,SAACC,GAAD,OAAazC,EAAKmB,oBAA4BsB,EAAQC,IAAI,SAAS,OAAQD,EAAS,SAI5GE,EAAa,SAACC,GAAD,OAAc5C,EAAKmB,mBAAyB,CAACyB,YAAW,SAErEC,EAAgB,SAACC,GAAD,OAAU9C,EAAKmB,sBAA4B2B,EAAM,SAQjEC,EAAqB,SAACC,GAAD,OAAUhD,EAAKmB,iBAAsB6B,EAAKN,IAAM,SAAW,OAAQM,EAAM,S,kBCrD5F,G,OAAA,IAA0B,iCCI1BA,EADF,CAAEA,KAAM,I,kBCEfC,EAAW,WA0BFC,EAzBG,CAIhBC,SAJgB,SAINH,GAERI,IAAMC,IAAIJ,EAAUD,IAMtBM,QAZgB,WAcd,OAAOF,IAAM5C,IAAIyC,IAAa,IAMhCM,WApBgB,WAsBdH,IAAMI,OAAOP,K,yBCvBF,SAASQ,EAAWC,GAC/B,OAAO,kDAAYA,GAAZ,IAAmBC,UAAY,iBCQ3B,SAASC,IACpB,IAAMC,EAAWC,cACjB,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBAGMC,EAAQ,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACLtD,EAAuBqD,EAAvBrD,SAAUC,EAAaoD,EAAbpD,SADL,SAEQF,EAASC,EAAUC,GAF3B,OAGS,KADhBsD,EAFO,QAGFtC,QACPnB,IAAQ0D,QAAQ,4BAEVzB,EAAOwB,EAAOtE,KACpBwE,QAAQC,IAAI3B,GACZ4B,EAAY5B,KAAOA,EACnB6B,EAAa1B,SAASH,GAEtBa,EAAS,IAAK,CAAEiB,SAAS,KAEzB/D,IAAQD,MAAM0D,EAAOO,KAbZ,2CAAH,sDAqBdC,qBAAU,WACFhB,EACAI,EAAKa,eAAe,CAAEhE,SAAU,QAASC,SAAU,UAEnDkD,EAAKc,gBAGV,CAAClB,IAqBJ,OACI,sBAAKL,UAAU,QAAf,UACI,yBAAQA,UAAU,eAAlB,UACI,qBAAKwB,IAAKC,EAAKC,IAAI,SACnB,+FAEJ,0BAAS1B,UAAU,gBAAnB,UACI,0DACA,eAAC,IAAD,CACIS,KAAMA,EACN7B,KAAK,eACLoB,UAAU,aACV2B,cAAe,CAAEC,SAAUvB,GAC3BK,SAAUA,EACVmB,eA7CO,SAACC,GACpBf,QAAQC,IAAI,2BAAQc,IAsCZ,UAQI,cAAC,IAAKC,KAAN,CACInD,KAAK,WAGLoD,MAAO,CACH,CAAEC,UAAU,EAAMC,YAAY,EAAM9E,QAAS,qDAC7C,CAAE+E,IAAK,GAAI/E,QAAS,oDACpB,CAAEgF,IAAK,EAAGhF,QAAS,8CACnB,CAAEiF,QAAS,kBAAmBjF,QAAS,sGAR/C,SAWI,cAAC,IAAD,CAAOkF,OAAQ,cAACC,EAAA,EAAD,CAAcvC,UAAU,wBAA0BwC,YAAY,yBAEjF,cAAC,IAAKT,KAAN,CACInD,KAAK,WAELoD,MAAO,CAAC,CACJS,UAAW,SAACC,EAAGC,GACX,OAAKA,EAEMA,EAAMC,OAAS,GAAKD,EAAMC,OAAS,GACnCnG,QAAQE,OAAO,IAAIkG,MAAM,sFAGxB,kBAAkBC,KAAKH,GAGxBlG,QAAQC,UAFRD,QAAQE,OAAO,IAAIkG,MAAM,qGANzBpG,QAAQE,OAAO,IAAIkG,MAAM,4CANhD,SAmBI,cAAC,IAAD,CACIP,OAAQ,cAACS,EAAA,EAAD,CAAc/C,UAAU,wBAChCxD,KAAK,WACLgG,YAAY,mBAGpB,eAAC,IAAKT,KAAN,WACI,cAAC,IAAKA,KAAN,CAAWnD,KAAK,WAAWoE,cAAc,UAAUC,SAAO,EAA1D,SACI,cAAC,IAAD,CACIC,SAAU,SAACC,GAAD,OAAO7C,EAAc6C,EAAEC,OAAOC,UAD5C,8CAMJ,mBAAGrD,UAAU,YAAYsD,KAAK,+BAA9B,kCAGJ,cAAC,IAAKvB,KAAN,UACI,cAAC,IAAD,CAAQvF,KAAK,UAAU+G,SAAS,SAASvD,UAAU,oBAAnD,+BAKR,cAACF,EAAD,CAAY0D,QA1FL,WACf,IAAMnE,EAAO,CACT,IAAO,CACH,KAAQ,4BAEZ,SAAY,QACZ,SAAY,mCACZ,YAAe,cACf,IAAO,EACP,KAAO,CACH,MAAQ,KAIhB4B,EAAY5B,KAAOA,EACnB6B,EAAa1B,SAASH,GAEtBa,EAAS,IAAK,CAAEiB,SAAS,KAyEjB,kF,sCCvIT,SAASsC,EAAYC,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAO,IAAIC,KAAKF,GACpB,OAAOC,EAAKE,cAAgB,KACrBF,EAAKG,WAAa,GAAK,IACxBH,EAAKI,UAAY,IACjBJ,EAAKK,WAAa,IAClBL,EAAKM,aAAe,IACpBN,EAAKO,a,0FCyDEC,GAzDE,CACf,CACEC,MAAO,eACP1G,IAAK,IACL2G,KAAM,cAACC,EAAA,EAAD,KAER,CACEF,MAAO,eACP1G,IAAK,YACL2G,KAAM,cAACE,EAAA,EAAD,IACNC,SAAU,CAER,CACEJ,MAAO,2BACP1G,IAAK,YACL2G,KAAM,cAACI,EAAA,EAAD,KAER,CACEL,MAAO,2BACP1G,IAAK,WACL2G,KAAM,cAACK,EAAA,EAAD,OAIZ,CACEN,MAAO,2BACP1G,IAAK,QACL2G,KAAM,cAAC9B,EAAA,EAAD,KAER,CACE6B,MAAO,2BACP1G,IAAK,QACL2G,KAAM,cAACM,GAAA,EAAD,KAER,CACEP,MAAO,2BACP1G,IAAK,UACL2G,KAAM,cAACO,GAAA,EAAD,IACNJ,SAAU,CACR,CACEJ,MAAO,qBACP1G,IAAK,cACL2G,KAAM,cAACQ,GAAA,EAAD,KAER,CACET,MAAO,qBACP1G,IAAK,eACL2G,KAAM,cAACS,GAAA,EAAD,KAER,CACEV,MAAO,eACP1G,IAAK,cACL2G,KAAM,cAACU,GAAA,EAAD,QCtDNC,GAAYC,IAAZD,QAIO,SAASE,KACpB,IAAM5H,EAAY2D,EAAY5B,KAAK/B,SACnC,EAAuB8C,mBAASqD,EAAYG,KAAKuB,QAAjD,mBAAOzB,EAAP,KAAY0B,EAAZ,KACA,EAA2BhF,mBAAS,IAApC,mBAAOiF,EAAP,KAAcC,EAAd,KACA,EAA6BlF,mBAAS,IAAtC,mBAAOmF,EAAP,KAAeC,EAAf,KAGMC,EADUC,cACMC,SAClBzF,EAAWC,cACXiE,EAAO,GAELwB,EAAU,uCAAG,kCAAAhF,EAAA,sEACKnD,EAAW,mCAAmC,aADnD,OAEI,SADboD,EADS,QAELgF,MAAgB,EACIhF,EAAnBsE,IAAKd,EADS,EACTA,KAAKyB,EADI,EACJA,KAEjBR,EAAUjB,GAEU,MAAjB0B,SAAS1B,IACRiB,EAAU,KAEdE,EAAWM,IAEX1I,IAAQD,MAAM,oDAZH,2CAAH,qDAkBhBkE,qBAAU,WACNuE,IAEN,IAAII,EAAQC,aAAY,WACvBb,EAAQ3B,EAAYG,KAAKuB,UACxB,KACF,OAAO,WACNe,cAAcF,MAEd,KAEkB,SAAXG,EAAWhC,GACb,OAAOA,EAASiC,KAAI,SAAAC,GAQhB,OAPKA,EAAK7B,SAKN2B,EAASE,EAAK7B,UAJV6B,EAAK3I,MAAM+H,IACXrB,EAAQiC,EAAKjC,OAKdA,KAGf+B,CAAShC,IAkBT,OACI,yBAAQnE,UAAU,SAAlB,UACI,sBAAKA,UAAU,aAAf,UACI,sDAAU1C,KACV,cAACwC,EAAD,CAAY0D,QApBV,WACVwB,GAAQ,CACJZ,MAAO,kCACPC,KAAM,cAACiC,EAAA,EAAD,IAENC,KAJI,WAMFrF,EAAatB,aACbqB,EAAY5B,KAAO,GACnBa,EAAS,SAAU,CAAEiB,SAAS,KAEhCqF,SAVI,WAWFzF,QAAQC,IAAI,cAQV,6BAGJ,sBAAKhB,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAf,SAAqCoE,IACrC,sBAAKpE,UAAU,sBAAf,UACI,+BAAO0D,IAEP,mBAAG1D,UAAW,MAAMqF,EAAO,QAASoB,MAAO,CAACC,MAAM,QAAQC,SAAS,OAAOC,OAAO,YACjF,+BAAOrB,a,cC1FnBsB,I,OAAYC,KAAZD,SAKO,SAASE,KAItB,IAAItB,EAAOC,cAAcC,SACzBF,EAAO,IAAMA,EAAKuB,MAAM,MAAM,GAE9B,IAAIC,EAAU,GAIRC,EAAe,SAAfA,EAAe/C,GACnB,OAAOA,EAASiC,KAAI,SAAAC,GAClB,OAAIc,EAAQd,GACLA,EAAK7B,UAUM6B,EAAK7B,SAAS4C,MAAK,SAAAC,GAAK,OAAgC,IAA5B5B,EAAK6B,QAAQD,EAAM3J,UAG3DuJ,EAAUZ,EAAK3I,KAIf,cAACmJ,GAAD,CAAwBxC,KAAMgC,EAAKhC,KAAMD,MAAOiC,EAAKjC,MAArD,SACG8C,EAAab,EAAK7B,WADP6B,EAAK3I,MAfnB,cAAC,KAAKqE,KAAN,CAA0BsC,KAAMgC,EAAKhC,KAArC,SACE,cAAC,IAAD,CAAMkD,GAAIlB,EAAK3I,IAAf,SAAqB2I,EAAKjC,SADZiC,EAAK3I,KAqBlB,SAMPyJ,EAAU,SAACd,GACf,IAAQ3I,EAAQ2I,EAAR3I,IAEF8J,EAAQvG,EAAY5B,KAAKF,KAAKqI,MAMpC,MAAiB,UALAvG,EAAY5B,KAAK/B,WAKkB,IAAxBkK,EAAMF,QAAQ5J,MAE/B2I,EAAK7B,YACL6B,EAAK7B,SAAS4C,MAAK,SAAAK,GAAK,OAAkC,IAA9BD,EAAMF,QAAQG,EAAM/J,SAa7D,OANAgK,mBAAQ,WACNR,EAAa/C,MAEZ,IAID,sBAAKnE,UAAU,WAAf,UAEE,eAAC,IAAD,CAAMuH,GAAG,IAAIvH,UAAU,kBAAvB,UACE,qBAAKwB,IAAKC,EAAKC,IAAI,SACnB,8CAEF,cAAC,KAAD,CAIEiG,aAAc,CAAClC,GACfmC,gBAAiB,CAACX,GAElBY,KAAK,SACLC,MAAM,OARR,SAYGZ,EAAa/C,SC7FtB,IAAQ4D,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,MAAOC,GAAYF,IAAZE,QAIR,SAASC,KACpB,IAAM9I,EAAO4B,EAAY5B,KAEzB,OAAKA,GAASA,EAAKN,IAMf,cADA,CACC,IAAD,CAAQ0H,MAAO,CAAE2B,UAAW,QAA5B,UACI,cAACH,GAAD,UACI,cAAClB,GAAD,MAEJ,eAAC,IAAD,WACI,cAAC7B,GAAD,IACA,cAACgD,GAAD,CAASzB,MAAO,CAAEG,OAAO,GAAGyB,gBAAiB,QAA7C,SACG,cAAC,IAAD,MAEH,cAACN,GAAD,CAAQtB,MAAO,CAAE6B,UAAW,SAAU5B,MAAO,WAA7C,wJAbD,cAAC,IAAD,CAAUa,GAAG,W,8BCRb,SAASgB,KACtB,IAAMrI,EAAWC,cACjB,OACE,eAAC,KAAD,CAAKH,UAAU,YAAf,UACI,cAAC,KAAD,CAAKwI,KAAM,GAAIxI,UAAU,SACzB,eAAC,KAAD,CAAKwI,KAAM,GAAIxI,UAAU,QAAzB,UACE,qCACA,0GACA,8BACE,cAAC,IAAD,CAAQxD,KAAK,UAAUgH,QAAS,kBAAMtD,EAAS,IAAK,CAAEiB,SAAS,KAA/D,8C,kCCTJY,GAASxB,IAATwB,KACA0G,GAAWC,KAAXD,OAKO,SAASE,GAAS5I,GAC/B,IAAQ6I,EAAyB7I,EAAzB6I,MAAOvJ,EAAkBU,EAAlBV,KAAMwJ,EAAY9I,EAAZ8I,QACbvL,EAAmD+B,EAAnD/B,SAAUyB,EAAyCM,EAAzCN,IAAKxB,EAAoC8B,EAApC9B,SAAUuL,EAA0BzJ,EAA1ByJ,MAAOC,EAAmB1J,EAAnB0J,MAAOC,EAAY3J,EAAZ2J,QAC/CjI,QAAQC,IAAI3B,GACZ,MAAekB,IAAKC,UAAbC,EAAP,oBAMA,OALAY,qBAAU,WACRZ,EAAKa,eAAe,CAAEhE,WAAUC,WAAUuL,QAAOC,QAAOC,YACxDH,EAAQpI,KAEP,CAACpB,IAEF,eAAC,IAAD,CACEoB,KAAMA,EACNwI,SAAU,CAAET,KAAM,GAClBU,WAAY,CAAEV,KAAM,IAHtB,UAKE,cAACzG,GAAD,CAAMoH,MAAM,qBAAMvK,KAAK,WAAvB,SACE,cAAC,IAAD,CAAO4D,YAAY,2CAGnBzD,EAAM,KACJ,cAACgD,GAAD,CAAMoH,MAAM,eAAKvK,KAAK,WAAtB,SACE,cAAC,IAAD,CAAOpC,KAAK,WAAWgG,YAAY,qCAIzC,cAACT,GAAD,CAAMoH,MAAM,qBAAMvK,KAAK,QAAvB,SACE,cAAC,IAAD,CAAO4D,YAAY,2CAErB,cAACT,GAAD,CAAMoH,MAAM,eAAKvK,KAAK,QAAtB,SACE,cAAC,IAAD,CAAO4D,YAAY,qCAErB,cAACT,GAAD,CAAMoH,MAAM,eAAKvK,KAAK,UAAtB,SACE,cAAC,KAAD,UAEIgK,EAAMxC,KAAI,SAAAjH,GAAI,OAAI,cAACsJ,GAAD,CAAuB9F,MAAOxD,EAAKJ,IAAnC,SAAyCI,EAAKP,MAAjCO,EAAKJ,eC9CzC,IACMqK,GAAe,gCCMb,SAASC,KACpB,MAA0BjJ,mBAAS,IAAnC,mBAAOkJ,EAAP,KAAcC,EAAd,KACA,EAAwBnJ,mBAAS,IAAjC,mBAAOf,EAAP,KAAamK,EAAb,KACA,EAA0BpJ,mBAAS,IAAnC,mBAAOwI,EAAP,KAAca,EAAd,KACA,EAAkCrJ,mBAAS,IAA3C,mBAAOsJ,EAAP,KAAkBC,EAAlB,KACA,EAA4BvJ,oBAAS,GAArC,mBAAOwJ,EAAP,KAAeC,EAAf,KACA,EAAgCzJ,mBAAS,IAAzC,mBAAO0J,EAAP,KAAiBC,EAAjB,KAGM3F,EAAS,cAAC,IAAD,CAAQ5H,KAAK,UAAUgH,QAAS,kBAAIwG,KAApC,sCACTC,EAAU,CACZ,CACI7F,MAAO,qBACP8F,UAAW,YAEf,CACI9F,MAAO,eACP8F,UAAW,SAGf,CACI9F,MAAO,eACP8F,UAAW,SAEf,CACI9F,MAAO,2BACP8F,UAAW,cACXC,OAAQ1G,GAEZ,CACIW,MAAO,2BACP8F,UAAW,UACXC,OAAQ,SAACnB,GAAD,OAAaU,EAAUV,KAEnC,CACI5E,MAAO,eACP+F,OAAQ,SAAC9K,GAAD,OACJ,iCACI,cAACS,EAAD,CAAY0D,QAAS,kBAAM4G,EAAW/K,IAAtC,0BACA,cAACS,EAAD,CAAY0D,QAAS,kBAAM6G,EAAWhL,IAAtC,gCAMV2K,EAAU,WACZR,EAAQ,IACRK,GAAU,IAIRO,EAAa,SAAC/K,GAChBmK,EAAQnK,GACRwK,GAAU,IAIRQ,EAAa,SAAChL,GAChB4F,IAAMD,QAAQ,CACVZ,MAAM,2BAAD,OAAS/E,EAAK/B,SAAd,WACLiJ,KAAK,WAAD,4BAAE,sBAAA3F,EAAA,sEdnBuBvE,EAAKmB,sBAA4B,CAAC8M,OcoBxBjL,EAAKN,KdpB4B,QcmBlE,OAEoB,IAFpB,OAESR,SACPnB,IAAQ0D,QAAQ,yCAChByJ,KAJF,2CAAF,kDAAC,MAWPC,EAAe,uCAAG,4BAAA5J,EAAA,6DACpBiJ,GAAU,GAEJY,EAAQX,EAASY,iBACvBZ,EAASvI,cAELkJ,IACFA,EAAM1L,IAAMM,EAAKN,KAPC,SAUCK,EAAmBqL,GAVpB,OAYE,IAZF,OAYTlM,SACPnB,IAAQ0D,QAAR,UAAmB2J,EAAQ,eAAO,eAAlC,6BACAF,KAdgB,2CAAH,qDAkBfI,EAAgB,SAAC/B,GACnB,IAAMc,EAAYd,EAAMgC,QAAO,SAACC,EAAK1L,GAEjC,OADA0L,EAAI1L,EAAKJ,KAAOI,EAAKP,KACdiM,IACR,IAEHlB,EAAaD,IAGXa,EAAQ,uCAAG,kCAAA3J,EAAA,sEd3DSvE,EAAKmB,qBc2Dd,OAES,KADhBqD,EADO,QAEFtC,SAAe,EACGsC,EAAOtE,KAAxB+M,EADa,EACbA,MAAOV,EADM,EACNA,MACf+B,EAAc/B,GACdW,EAASD,GACTG,EAASb,IANA,2CAAH,qDAWd,OADAvH,qBAAU,WAAQkJ,MAAc,IAE5B,eAAC,KAAD,CAAMnG,MAAOA,EAAb,UACI,cAAC,KAAD,CACI0G,UAAQ,EACRC,OAAO,MACPC,WAAY1B,EACZW,QAASA,EACTgB,WAAY,CAAEC,gBD3HL,KC6Hb,cAAC,IAAD,CACI9G,MAAO/E,EAAKN,IAAM,2BAAS,2BAC3BoM,QAASvB,EACTrD,KAAMiE,EACNhE,SAAU,WACNsD,EAASvI,cACTsI,GAAU,IANlB,SASI,cAAClB,GAAD,CACIE,QAAS,SAAApI,GAAI,OAAIsJ,EAAYtJ,IAC7BmI,MAAOA,EACPvJ,KAAMA,S,wBCzIlBoJ,GAAWC,KAAXD,OAIO,SAAS2C,GAAQrL,GAC5B,IAAQsL,EAAiCtL,EAAjCsL,WAAYxN,EAAqBkC,EAArBlC,SAASgL,EAAY9I,EAAZ8I,QAC7B,EAAetI,IAAKC,UAAbC,EAAP,oBAMA,OALAY,qBAAU,WACNZ,EAAKa,eAAe,CAAEgK,iBAAiBzN,IACvCgL,EAAQpI,KAET,CAAC5C,IAEA,eAAC,IAAD,CAAM4C,KAAMA,EAAZ,UACI,cAAC,IAAKsB,KAAN,CAAWnD,KAAK,mBAAhB,SACI,eAAC,KAAD,WACI,cAAC,GAAD,CAAQ+D,MAAM,IAAd,sCAEI0I,EAAWjF,KAAI,SAAAmF,GAAC,OAAG,cAAC,GAAD,CAAQ5I,MAAO4I,EAAExM,IAAjB,SAAmCwM,EAAE3M,MAAV2M,EAAExM,aAI5D,cAAC,IAAKgD,KAAN,CACAnD,KAAK,eACLoD,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAFnC,SAII,cAAC,IAAD,CAAOoF,YAAY,oDCtBpB,SAASgJ,GAAWzL,GAE/B,IAA2BhC,EAA2BgC,EAA9C0L,aAAc7M,KAAoBiK,EAAY9I,EAAZ8I,QAE1C,EAAetI,IAAKC,UAAbC,EAAP,oBAUA,OAPAY,qBAAU,WACNZ,EAAKa,eAAe,CAAEvD,iBACtB8K,EAAQpI,KAET,CAAC1C,IACJgD,QAAQC,IAAI6H,GACZ9H,QAAQC,WAAWjD,GAEf,cAAC,IAAD,CAAM0C,KAAMA,EAAZ,SACI,cAAC,IAAKsB,KAAN,CAAWnD,KAAK,eAAeoD,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAAlE,SACI,cAAC,IAAD,CAAOoF,YAAY,mDCbpB,SAASkJ,KACpB,MAAoCtL,mBAAS,IAA7C,mBAAOiL,EAAP,KAAmBM,EAAnB,KACA,EAA0CvL,mBAAS,IAAnD,mBAAOwL,EAAP,KAAsBC,EAAtB,KACA,EAA8BzL,oBAAS,GAAvC,mBAAO0L,EAAP,KAAgBC,EAAhB,KACA,EAAgC3L,mBAAS,KAAzC,mBAAOvC,EAAP,KAAiBmO,EAAjB,KAGA,EAAoC5L,mBAAS,KAA7C,mBAAO6L,EAAP,KAAmBC,EAAnB,KACA,EAA0B9L,mBAAS,wCAAnC,mBAAOgE,EAAP,KAAc+H,EAAd,KACA,EAAwC/L,mBAAS,IAAjD,mBAAOqL,EAAP,KAAqBW,EAArB,KACA,EAAgChM,mBAAS,IAAzC,mBAAO0J,EAAP,KAAiBC,EAAjB,KAWMsC,EAAe,WACjBH,EAAc,IAGZI,EAAW,uCAAG,gCAAA1L,EAAA,6DAChBsL,EAAc,GADE,EAEwBpC,EAASyC,gBAA1CjB,EAFS,EAETA,iBAAiBvN,EAFR,EAEQA,aAFR,SAGKD,EAAeC,EAAcuN,GAHlC,OAKM,IALN,OAKL/M,QAAgBV,IAAayN,GACpCkB,EAAc3O,GANF,2CAAH,qDAWX4O,EAAc,uCAAG,8BAAA7L,EAAA,6DACnBsL,EAAc,GACRjO,EAAawN,EAAa1M,IAC1BhB,EAAe+L,EAASyC,cAAc,gBAHzB,SjB3BS,EiB+Ba,CAAExO,eAAcE,cjB/BI5B,EAAKmB,0BAAgC,CAAEO,aAAzE,EAAGA,aAAoFE,WAAvF,EAAiBA,YAAoF,QiB2B7G,OAKG,IALH,OAKRM,QAEPiO,EAAc3O,GAPC,iCjB3BQ,IAAC,IiB2BT,OAAH,qDAUd6O,EACF,eAAC,IAAD,CAAQlQ,KAAK,UAAUgH,QAnCX,WACZ0I,EAAc,IAkCd,UACI,cAACS,GAAA,EAAD,IADJ,kBAME1C,EAAU,CACZ,CACI7F,MAAO,2BACP8F,UAAW,QAEf,CACI9F,MAAO,eACPwI,MAAO,IAEPzC,OAAQ,SAAA0C,GAAQ,OACZ,cADiB,CACjB,kBAEI,cAAC/M,EAAD,CAAY0D,QAAS,kBAjDjB,SAACqJ,GACjBT,EAAgBS,GAChBX,EAAc,GA+CyBY,CAAYD,IAAvC,sCAEc,MAAbhP,EACK,cAACiC,EAAD,CAAY0D,QAAS,kBAAMuJ,EAAkBF,IAA7C,4CAGA,WAQhBL,EAAa,uCAAG,WAAO3O,GAAP,eAAA+C,EAAA,6DAClBmL,GAAW,GADO,SAEGnO,EAAcC,GAFjB,OAEZgD,EAFY,OAGlBkL,GAAW,GACW,IAAlBlL,EAAOtC,OACU,MAAbV,EACA8N,EAAc9K,EAAOtE,MAErBsP,EAAiBhL,EAAOtE,MAI5Ba,IAAQD,MAAM,oDAZA,2CAAH,sDAgBb6P,EAAsB,WACxBhB,EAAY,KACZH,EAAiB,IAEjBM,EAAS,yCAGPY,EAAoB,SAACF,GACvBb,EAAYa,EAAS9N,KAErBoN,EACI,iCACKpL,QAAQC,IAAI6L,EAASjO,MACtB,cAACkB,EAAD,CAAY0D,QAASwJ,EAArB,kDACA,cAACC,GAAA,EAAD,CAAoBxG,MAAO,CAAEyG,YAAa,KAC1C,+BAAOL,EAASjO,YAQ5B,OAFAyC,qBAAU,WAAQmL,EAAc3O,KAAa,CAACA,IAG1C,eAAC,KAAD,CAAMuG,MAAOA,EAAOsI,MAAOA,EAA3B,UACI,cAAC,KAAD,CACI3B,OAAO,MACPD,UAAQ,EACRG,WAAY,CAAEC,gBAAiB,EAAGiC,iBAAiB,GACnDrB,QAASA,EACTd,WAAyB,MAAbnN,EAAmBwN,EAAaO,EAC5C3B,QAASA,IACb,cAAC,IAAD,CACI7F,MAAM,2BACN+G,QAAwB,IAAfc,EACT1F,KAAM+F,EACN9F,SAAU6F,EAJd,SAKI,cAACjB,GAAD,CACIC,WAAYA,EACZxN,SAAUA,EACVgL,QAAS,SAACpI,GAAD,OAAUsJ,EAAYtJ,QAGvC,cAAC,IAAD,CACI2D,MAAM,2BACN+G,QAAwB,IAAfc,EACT1F,KAAMkG,EACNjG,SAAU6F,EAJd,SAKI,cAACb,GAAD,CACIC,aAAcA,EACd5C,QAAS,SAACpI,GAAD,OAAUsJ,EAAYtJ,W,uGChJ7CqH,GAAQsF,sBAGC,SAASC,KACtB,IAsDIC,EAtDE/Q,EAAO,CACX,CAAEqC,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,MAAOC,iBAAkB,IAC9C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,IAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,MAAOC,iBAAkB,MAC9C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,MAC/C,CAAE5O,KAAM,eAAM2O,MAAO,OAAQC,iBAAkB,OAE3CC,EAAUlR,EAAKqO,QAAO,SAACC,EAAKxE,GAChC,IAAQkH,EAA4BlH,EAA5BkH,MAAOC,EAAqBnH,EAArBmH,iBAKf,OAJK3C,EAAI0C,KACP1C,EAAI0C,GAAS,GAEf1C,EAAI0C,IAAWC,EACR3C,IACN,IAEG6C,EAAcC,OAAOC,KAAKH,GAASrH,KAAI,SAAA1I,GAC3C,MAAO,CAAE6P,MAAO7P,EAAKmQ,YAAaC,QAAQL,EAAQ/P,GAAO,GAAGqQ,QAAQ,IAAKnP,KAAM,UAG3EoP,EAAQ,CACZT,MAAO,CACLU,MAAM,GAERJ,YAAa,CACXzL,IAAK,EACLD,IAAK,IACL+L,MAAO,WAETV,iBAAkB,CAChBpL,IAAK,EACLD,IAAK,MAIHgM,EAASrG,GAAMsG,SAIjBC,EAAY,GAKhB,OACE,qBAAKrO,UAAU,OAAf,SACE,eAAC,SAAD,CAAOsO,OAAQ,IAAMN,MAAOA,EAC1BzR,KAAMA,EAAMgS,SAAO,EACnBC,gBAAiB,SAAAjD,GAAC,OAAI+B,EAAW/B,GAFnC,UAGE,cAAC,WAAD,CAASkD,QAAM,IACf,cAAC,YAAD,CACEC,OAAQ,CACN,CACElS,KAAM,QACNmS,YAAa,IAGjBjI,MAAO,CAAC,OAAQyH,GAChBS,SAAS,2BAEX,cAAC,QAAD,CAAMhQ,KAAK,mBAAmBgQ,SAAS,SACvC,eAAC,QAAD,CAAMrS,KAAMmR,EAAaM,MAAOA,EAAOa,QAAS,EAAhD,UACE,cAAC,QAAD,CAAMjQ,KAAK,cAAcgQ,SAAS,UAClC,cAAC,QAAD,CACEA,SAAS,oBACTlI,MAAOyH,EAAO,QAGlB,cAAC,UAAD,CAAQW,QAAQ,EAAMC,MAAO,CAC3B,CACEnQ,KAAM,eAAM+D,MAAO,eAAMqM,OAAQ,CAC/BC,OAAQ,SACRxI,MAAO,CAAEyI,KAAMf,EAAO,MAG1B,CACEvP,KAAM,eAAM+D,MAAO,eAAMqM,OAAQ,CAC/BC,OAAQ,SACRxI,MAAO,CAAEyI,KAAMf,EAAO,MAG1B,CACEvP,KAAM,eAAM+D,MAAO,MAAOqM,OAAQ,CAChCC,OAAQ,SACRxI,MAAO,CAAE0I,OAAQhB,EAAO,GAAIiB,UAAW,MAG3ClM,SAAU,SAACmM,GACT,IAAQhJ,EAASgJ,EAAThJ,KACA1D,EAAU0D,EAAV1D,MACFU,GAAWgD,EAAKiJ,UAGtB,GADAjB,EAAU1L,GAASU,EACL,QAAVV,EAAiB,CAEnB,IAAM4M,EAAOjC,EAASkC,MAAM,GAC5BD,EAAKE,OAAO,QAAQ,SAACC,GACnB,OAAOrB,EAAUqB,MAGnBH,EAAKpF,QAAO,QAGZmD,EAASmC,OAAO,QAAQ,SAACC,GACvB,OAA0B,IAAnBrB,EAAUqB,MAGnBpC,EAASnD,QAAO,W,yBC1Hf,SAASwF,KACtB,MAAwBvP,qBAAxB,mBAAO7D,EAAP,KAAaqT,EAAb,KAqBC,OApBAvO,qBAAU,WACRwO,MAAM,+FACH7S,MAAK,SAAA8S,GAAG,OAAIA,EAAIC,UAChB/S,MAAK,SAAAT,GACH,IACMyT,GADK,IAAIC,MACDC,aACdF,EAAGG,OAAO5T,GACP6T,UAAU,CACT5T,KAAM,MACN6T,SAAU,SAAAC,GAGR,OAFAA,EAAIC,MAASD,EAAIE,OAASF,EAAIG,IAAO,eAAO,eAC5CH,EAAII,MAAQ,CAACJ,EAAIE,MAAOF,EAAIG,IAAKH,EAAInO,IAAKmO,EAAIlO,KACvCkO,KAGZvP,QAAQC,IAAIgP,GACZJ,EAAQI,EAAGW,WAEhB,IAEI,eAAC,SAAD,CAEL9B,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBtS,KAAMA,EACNgS,SAAO,EACPP,MAAO,CACJtK,KAAM,CACNlH,KAAM,UACNkU,MAAO,CAAC,EAAG,GACXE,UAAW,GAGXC,OAAQ,CAAE3C,MAAO,sBACjBsC,MAAO,CAAEtC,MAAO,sBAChBuC,IAAK,CAAEvC,MAAO,sBACd/L,IAAK,CAAE+L,MAAO,sBACd9L,IAAK,CAAE8L,MAAO,sBACdwC,MAAO,CAAExC,MAAO,6BAjBd,UAoBL,cAAC,WAAD,CACG4C,WAAW,EACXC,aAAa,EACbC,QAAS,oJAIb,cAAC,QAAD,CACEzU,KAAMA,EACN0U,OAAQ,CACNT,MAAO,CAAEU,EAAG,EAAGC,EAAG,GAClBV,IAAK,CAAES,EAAG,EAAGC,EAAG,KAJpB,SAOE,cAAC,UAAD,CACEvC,SAAU,aACVwC,MAAO,SACP1K,MAAO,CACL,QAAS,SAAAgJ,GACP,MAAY,iBAARA,EACK,UAGG,iBAARA,EACK,eADT,IAKJ2B,QAAS,CACT,yBACA,SAAC3N,EAAM8M,EAAOC,EAAKtO,EAAKC,GACtB,MAAO,CACLxD,KAAM8E,EACNf,MAAO,gEAA8C6N,EAA9C,wEACuCC,EADvC,wEAEuCtO,EAFvC,wEAGuCC,EAAM,iBAK5D,eAAC,QAAD,CACE7F,KAAMA,EACN0U,OAAQ,CACNT,MAAO,CAAEU,EAAG,EAAGC,EAAG,IAClBV,IAAK,CAAES,EAAG,EAAGC,EAAG,IAElBnD,MAAO,CACL6C,OAAQ,CACND,UAAW,IARjB,UAYA,cAAC,QAAD,CAAMhS,KAAK,OAAO0S,SAAU,KAAMnI,MAAO,OACzC,cAAC,QAAD,CAAMvK,KAAK,SACTuK,MAAO,CACHoI,UAAW,SAAA7B,GACT,OAAQA,EAAM,IAAO,QAI7B,cAAC,YAAD,CACEd,SAAU,cACVlI,MAAO,CAAC,QAAS,SAAAgJ,GACf,MAAY,iBAARA,EACK,UAGG,iBAARA,EACK,eADT,IAIF2B,QAAS,CAAC,cAAe,SAAC3N,EAAMmN,GAC9B,MAAO,CACLjS,KAAM8E,EACNf,MAAO,iEAA+CkO,EAAS,0B,WCnHnEW,GAAa,aACXC,GAAgBC,KAAhBD,YAEO,SAASE,KACpB,OACI,sBAAK3R,UAAU,OAAf,UACI,eAAC,KAAD,CACIA,UAAU,YACVoE,MAAM,2BACNsI,MAAO,cAACkF,GAAA,EAAD,CAAwBnL,MAAO,CAAEC,MAAO,qBAC/CmL,UAAW,CAAEnL,MAAO,mBAJxB,UAMI,cAAC,KAAD,CACI/D,MAAO,QACPmP,OAAO,SACPrL,MAAO,CAAEsL,WAAY,YAEzB,cAAC,KAAD,CACIpP,MAAO,GACPqP,WAAY,CAAErL,SAAU,IACxBrE,OAAQ,qBACRwP,OAAQ,oCAAM,cAACG,GAAA,EAAD,CAAmBxL,MAAO,CAAEC,MAAO,MAAOwL,WAAY,WAExE,cAAC,KAAD,CACIvP,MAAO,GACPqP,WAAY,CAAErL,SAAU,IACxBrE,OAAQ,qBACRwP,OAAQ,oCAAM,cAACK,GAAA,EAAD,CAAiB1L,MAAO,CAAEC,MAAO,UAAWwL,WAAY,cAI9E,cAAC7E,GAAD,IAEA,eAAC,KAAD,CACIrN,UAAU,eACVoE,MAAO,qBAAKpE,UAAU,cAEtB0M,MAAO,cAAC+E,GAAD,CACHW,aAAc,CAACC,KAAO,aAAcb,IAAaa,KAAO,aAAcb,KACtEc,OAAQd,KANhB,UASI,cAAC,KAAD,CACIxR,UAAU,kBACVoE,MAAO,2BACPmO,UAAW,CAAE1D,QAAS,EAAGP,OAAQ,KACjC5B,MAAO,cAAC8F,GAAA,EAAD,IAJX,SAMI,cAAC7C,GAAD,MAGJ,cAAC,KAAD,CAAMvL,MAAM,eAAKsI,MAAO,cAAC8F,GAAA,EAAD,IAAoBxS,UAAU,mBAAtD,SACI,eAAC,KAAD,WACI,cAAC,KAAS+B,KAAV,CAAe2E,MAAM,QAArB,kDACA,cAAC,KAAS3E,KAAV,CAAe2E,MAAM,QAArB,8DACA,eAAC,KAAS3E,KAAV,CAAe2E,MAAM,MAArB,UACI,yDACA,4DAEJ,eAAC,KAAS3E,KAAV,WACI,qEACA,yDACA,uE,OCzEb,SAAS0Q,KACpB,OACI,8BACI,cAAC,IAAD,MCCG,SAASrH,GAAQrL,GAC5B,IAAQ8I,EAAY9I,EAAZ8I,QACR,EAAetI,IAAKC,UAAbC,EAAP,oBAKA,OAJAY,qBAAU,WACNwH,EAAQpI,KAET,IAEC,cAAC,IAAD,CAAMA,KAAMA,EAAZ,SAEI,cAAC,IAAKsB,KAAN,CACIoH,MAAM,2BACNvK,KAAK,WACLoD,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAHvC,SAKI,cAAC,IAAD,CAAOoF,YAAY,mD,cCf7BT,GAAOxB,IAAKwB,KAEH,SAAS2Q,GAAS3S,GAC7B,IAAQZ,EAAkBY,EAAlBZ,KAAKwT,EAAa5S,EAAb4S,SACNnL,EAASrI,EAATqI,MACP,EAAsCpH,mBAAS,IAA/C,mBAAOwS,EAAP,KAAoBC,EAApB,KACMC,EAAW,CACb,CACE1O,MAAO,2BACP1G,IAAK,MACL8G,SAASL,KAiBf,OATA9C,qBAAU,WACNwR,EAAerL,KAEhB,CAACA,IACJnG,qBAAU,WACNsR,EAASC,KAEV,CAACA,IAGA,eAAC,IAAD,WACI,cAAC,GAAD,CAAMzJ,MAAM,2BAAZ,SACI,cAAC,IAAD,CAAOxG,MAAOxD,EAAKP,KAAMmU,UAAQ,MAErC,cAAC,KAAD,CACIC,WAAS,EACTC,kBAAkB,EAClBL,YAAaA,EACbM,QAvBI,SAACC,GACbN,EAAeM,IAuBPL,SAAUA,OCzBX,SAASM,KACtB,IAAMlT,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOwI,EAAP,KAAca,EAAd,KACA,EAAwBrJ,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakU,EAAb,KACA,EAA8CjT,mBAAS,IAAvD,mBAAOkT,EAAP,KAAwBC,EAAxB,KACA,EAAkCnT,oBAAS,GAA3C,mBAAOoT,EAAP,KAAkBC,EAAlB,KACA,EAAoCrT,oBAAS,GAA7C,mBAAOsT,EAAP,KAAmBC,EAAnB,KACA,EAAgCvT,mBAAS,IAAzC,mBAAO0J,EAAP,KAAiBC,EAAjB,KACA,EAAuB3J,mBAAS,IAAhC,mBAAOoH,EAAP,KAAaoM,EAAb,KAEMxP,EACJ,iCACE,cAAC,IAAD,CAAQ5H,KAAK,UAAUgH,QAAS,kBAAMiQ,GAAa,IAAnD,sCADF,YAEE,cAAC,IAAD,CAAQjX,KAAK,UAAUuW,UAAW5T,EAAKJ,IAAKyE,QAAS,kBAAMmQ,GAAc,IAAzE,qDAGE1J,EAAU,CACd,CACE7F,MAAO,2BACP8F,UAAW,QAEb,CACE9F,MAAO,2BACP8F,UAAW,cACXC,OAAQ,SAAC0J,GAAD,OAAiBpQ,EAAYoQ,KAEvC,CACEzP,MAAO,2BACP8F,UAAW,YACXC,OAAQ1G,GAEV,CACEW,MAAO,qBACP8F,UAAW,cAaT4J,EAAQ,uCAAG,8BAAAlT,EAAA,sExBxBWvE,EAAKmB,qBwBwBhB,OAEO,KADhBqD,EADS,QAEJtC,SACHqK,EAAQ/H,EAAOtE,KACrBkN,EAASb,IAJI,2CAAH,qDASRmL,EAAO,uCAAG,8BAAAnT,EAAA,6DACd6S,GAAa,GADC,EAGO3J,EAASyC,gBAAtBtN,EAHM,EAGNA,SAHM,SAIOD,EAAWC,GAJlB,OAKQ,IALR,OAKHV,QACTnB,IAAQ0D,QAAQ,wCAChBgT,KAEA1W,IAAQD,MAAM,wCAEhB2M,EAASvI,cAXK,2CAAH,qDAgBPyS,EAAU,uCAAG,sBAAApT,EAAA,6DACjB+S,GAAc,GACdxU,EAAKqI,MAAQA,EACbrI,EAAK8U,UAAYrQ,KAAKuB,MACtBhG,EAAK+U,UAAYjT,EAAY5B,KAAK/B,SAClCyD,QAAQC,IAAI7B,GALK,SAOID,EAAcC,GAPlB,OAQG,IARH,OAQNZ,SAELY,EAAKJ,MAAQkC,EAAY5B,KAAK2J,SAChC/H,EAAY5B,KAAO,GACnB6B,EAAatB,aACbM,EAAS,SAAU,CAAEiB,SAAS,IAC9B/D,IAAQ0D,QAAQ,iEAEhB1D,IAAQ0D,QAAQ,qDAhBH,2CAAH,qDA0BhB,OADAO,qBAAU,WAAQyS,MAAc,IAE9B,eAAC,KAAD,CAAM1P,MAAOA,EAAb,UACE,cAAC,KAAD,CACE0G,UAAQ,EACRC,OAAO,MACPC,WAAYpC,EACZqB,QAASA,EACTgB,WAAY,CAAEC,gBXxHG,GWyHjBiJ,aAAc,CACZ3X,KAAM,QACN8W,kBACApQ,SAAU,SAACoQ,GAAD,OAAqBC,EAAmBD,IAClDc,SAAU,SAACjV,GAAD,OAAUkU,EAAQlU,KAG9BkV,MA5EQ,SAAClV,GACb,MAAO,CACLqE,QAAS,SAAA8Q,GAEPjB,EAAQlU,GACRoU,EAAmB,CAACpU,EAAKJ,WAyE3B,cAAC,IAAD,CACEqF,MAAM,2BACN+G,QAASqI,EACTjN,KAAMwN,EACNvN,SAAU,WACRiN,GAAa,GACb3J,EAASvI,eANb,SAQE,cAAC,GAAD,CACEsH,QAAS,SAACpI,GAAD,OAAUsJ,EAAYtJ,QAGnC,cAAC,IAAD,CACE2D,MAAM,uCACN+G,QAASuI,EACTnN,KAAMyN,EACNxN,SAAU,WACRmN,GAAc,IALlB,SAOE,cAACjB,GAAD,CAAUvT,KAAMA,EAAMwT,SAAU,SAACnL,GAAD,OAASoM,EAASpM,W,cCpJ3C,SAAS+M,KACpB,MAA0BnU,mBAAS,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAAvD,mBAAOoU,EAAP,KAAcC,EAAd,KACA,EAA4BrU,mBAAS,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAAzD,mBAAOsU,EAAP,KAAeC,EAAf,KAkCA,OACI,gCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQnY,KAAK,UAAUgH,QApCpB,WACXiR,EAASD,EAAMpO,KAAI,SAAAwO,GAAI,OAAIA,EAAO,MAClCD,EAAUD,EAAO9J,QAAO,SAACC,EAAKpL,GAE1B,OADAoL,EAAIgK,KAAKpV,EAAQ,GACVoL,IACR,MA+BK,4BAGJ,cAAC,KAAD,CAAMzG,MAAM,2BAAZ,SACI,cAAC,KAAD,CAAc0Q,OA/BR,SAACN,EAAOE,GACtB,MAAO,CAIHrD,QAAS,GACT0D,OAAQ,CACJxY,KAAM,CAAC,eAAM,iBAEjByY,MAAO,CACHzY,KAAM,CAAC,eAAM,qBAAO,qBAAO,eAAM,qBAAO,iBAE5C0Y,MAAO,GACPC,OAAQ,CAAC,CACLtW,KAAM,eACNpC,KAAM,MACND,KAAMiY,GACP,CACC5V,KAAM,eACNpC,KAAM,MACND,KAAMmY,KAWgBS,CAAUX,EAAOE,UC3CxC,SAASU,KACpB,MAA0BhV,mBAAS,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAAvD,mBAAOoU,EAAP,KAAcC,EAAd,KACA,EAA4BrU,mBAAS,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAAzD,mBAAOsU,EAAP,KAAeC,EAAf,KAkCA,OACI,gCACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQnY,KAAK,UAAUgH,QApCpB,WACXiR,EAASD,EAAMpO,KAAI,SAAAwO,GAAI,OAAIA,EAAO,MAClCD,EAAUD,EAAO9J,QAAO,SAACC,EAAKpL,GAE1B,OADAoL,EAAIgK,KAAKpV,EAAQ,GACVoL,IACR,MA+BK,4BAGJ,cAAC,KAAD,CAAMzG,MAAM,2BAAZ,SACI,cAAC,KAAD,CAAc0Q,OA/BR,SAACN,EAAOE,GACtB,MAAO,CAIHrD,QAAS,GACT0D,OAAQ,CACJxY,KAAM,CAAC,eAAM,iBAEjByY,MAAO,CACHzY,KAAM,CAAC,eAAM,qBAAO,qBAAO,eAAM,qBAAO,iBAE5C0Y,MAAO,GACPC,OAAQ,CAAC,CACLtW,KAAM,eACNpC,KAAM,OACND,KAAMiY,GACP,CACC5V,KAAM,eACNpC,KAAM,OACND,KAAMmY,KAWgBS,CAAUX,EAAOE,UC3CxC,SAASW,KAkHpB,OACI,gCACI,cAAC,KAAD,CAAMjR,MAAM,qBAAZ,SACI,cAAC,KAAD,CAAc0Q,OAjHf,CACH1Q,MAAO,CACH0B,KAAM,yDACNwP,QAAS,2BACTpE,EAAG,UAEPG,QAAS,CACLkE,QAAS,OACThE,UAAW,6BAEfwD,OAAQ,CACJS,OAAQ,WACRC,KAAM,OACNlZ,KAAM,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6BAE3C2Y,OAAQ,CACJ,CACItW,KAAM,2BACNpC,KAAM,MACNkZ,OAAQ,MACRC,OAAQ,CAAC,MAAO,OAChBpZ,KAAM,CACF,CAAEoG,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,KAAM/D,KAAM,6BAEzBgX,SAAU,CACNC,UAAW,CACPC,WAAY,GACZC,cAAe,EACfC,YAAa,0BAiFWvP,MAAO,CAAE6H,OAAQ,SAEzD,cAAC,KAAD,CAAMlK,MAAM,qBAAZ,SACI,cAAC,KAAD,CAAc0Q,OA3Ef,CACHzM,gBAAiB,UAEjBjE,MAAO,CACH0B,KAAM,iBACN2P,KAAM,SACNQ,IAAK,GACLC,UAAW,CACPxP,MAAO,SAIf2K,QAAS,CACLkE,QAAS,OACThE,UAAW,6BAGf4E,UAAW,CACPC,MAAM,EACNhU,IAAK,GACLD,IAAK,IACLkU,QAAS,CACLC,eAAgB,CAAC,EAAG,KAG5BpB,OAAQ,CACJ,CACItW,KAAM,2BACNpC,KAAM,MACNkZ,OAAQ,MACRC,OAAQ,CAAC,MAAO,OAChBpZ,KAAM,CACF,CAAEoG,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,4BACpB,CAAE+D,MAAO,IAAK/D,KAAM,6BACtB2X,MAAK,SAAU3V,EAAG4V,GAAK,OAAO5V,EAAE+B,MAAQ6T,EAAE7T,SAC5C8T,SAAU,SACVtN,MAAO,CACHzC,MAAO,4BAEXgQ,UAAW,CAEPC,UAAW,CACPjQ,MAAO,4BAEXkQ,OAAQ,GACRhU,OAAQ,GACRiU,QAAS,IAGbhB,UAAW,CAEPnP,MAAO,UACPoP,WAAY,IACZE,YAAa,sBAIjBc,cAAe,QACfC,gBAAiB,aACjBC,eAAgB,SAAUC,GACtB,OAAuB,IAAhBC,KAAKC,aAYgB1Q,MAAO,CAAE6H,OAAQ,Y,cClHtD8I,OATf,SAAqBC,EAAIC,GAAgB,IAATC,EAAQ,uDAAJ,GACjClW,qBAAU,WACP,IAAI2E,EAEJ,OADAA,EAAQwR,WAAWH,EAAIC,GAChB,WAAKG,aAAazR,MAHnB,aAKDuR,KCEH9O,GAAWC,KAAXD,OAIO,SAASiP,KACpB,IAAMxX,EAAWC,cACjB,EAAgCC,mBAAS,IAAzC,mBAAOuX,EAAP,KAAiBC,EAAjB,KACA,EAA0BxX,mBAAS,GAAnC,mBAAOyX,EAAP,KAAcC,EAAd,KACA,EAA8B1X,oBAAS,GAAvC,mBAAO0L,EAAP,KAAgBC,EAAhB,KACA,EAA8B3L,mBAAS,GAAvC,mBAAOjC,EAAP,KAAgB4Z,EAAhB,KACA,EAAoC3X,wBAAS4X,GAA7C,mBAAOvZ,EAAP,KAAmBwZ,EAAnB,KACA,EAAoC7X,mBAAS,eAA7C,mBAAO1B,EAAP,KAAmBwZ,EAAnB,KACA,EAAkC9X,mBAAS,IAA3C,mBAAO9B,EAAP,KAAkB6Z,EAAlB,KACA,EAA0C/X,mBAAS,GAAnD,mBAAOgY,EAAP,KAAsBC,EAAtB,KACMjU,EACF,iCACI,eAAC,KAAD,CACIzB,MAAOjE,EACP+H,MAAO,CAAEmG,MAAO,KAChB1J,SAAUgV,EAHd,UAKI,cAAC,GAAD,CAAQvV,MAAM,cAAd,4CACA,cAAC,GAAD,CAAQA,MAAM,cAAd,+CAEJ,cAAC,IAAD,CACIH,YAAY,qBACZiE,MAAO,CAAEmG,MAAO,IAAKhG,OAAQ,UAC7BjE,MAAOlE,EAEPyE,SAAU,SAAAoR,GAEN2D,EAAc3D,EAAMlR,OAAOT,UAInC,cAAC,IAAD,CAAQnG,KAAK,UAAUgH,QAAS,WAAQuU,EAAW,IAAnD,6BAGFrL,EACF,eAAC,IAAD,CAAQlQ,KAAK,UAAUgH,QAAS,kBAAMtD,EAAS,cAA/C,UACI,cAACyM,GAAA,EAAD,IADJ,8BAKE1C,EAAU,CACZ,CACI7F,MAAO,2BACP8F,UAAW,QAEf,CACI9F,MAAO,2BACP8F,UAAW,QAEf,CACI9F,MAAO,eACP8F,UAAW,QACXC,OAAQ,SAACmO,GAAD,MAAW,OAAMA,IAE7B,CACI1L,MAAO,IACPxI,MAAO,eAEP+F,OAAQ,SAACrL,GACL,IAAQP,EAAgBO,EAAhBP,OAAQQ,EAAQD,EAARC,IAChB,OACI,iCACI,cAAC,IAAD,CACIvC,KAAK,UACLgH,QAAS,WAAM2U,EAAapZ,GAAoBsZ,EAAH,IAAX9Z,EAA+B,EAAoB,IAFzF,SAKgB,IAAXA,EAAe,eAAO,iBAE3B,+BAAkB,IAAXA,EAAe,eAAO,4BAK7C,CACIqO,MAAO,IACPxI,MAAO,eACP+F,OAAQ,SAACrL,GACL,OACI,iCAEI,cAACgB,EAAD,CAAY0D,QAAS,kBAAMtD,EAAS,SAAU,CAAEqY,MAAOzZ,KAAvD,0BAIA,cAACgB,EAAD,CAAY0D,QAAS,kBAAMtD,EAAS,YAAa,CAAEqY,MAAOzZ,KAA1D,gCASd0Z,EAAW,uCAAG,WAAOra,GAAP,qBAAAyC,EAAA,yDAChBG,QAAQC,IAAI,GACZ+K,GAAW,IAIPtN,EANY,gCAOGD,EAAkB,CAAEL,UAASC,ShB/G/B,EgB+GoDK,aAAYC,eAPjE,OAOZmC,EAPY,+CASG3C,EAAYC,EhBjHd,GgBwGD,QASZ0C,EATY,eAYhBkL,GAAW,GACW,IAAlBlL,EAAOtC,SAAe,EACEsC,EAAOtE,KAAvBsb,EADa,EACbA,MAAOY,EADM,EACNA,KACfb,EAAYa,GACZX,EAASD,IAhBG,4CAAH,sDAqBXa,EAAmB,uCAAG,WAAOja,GAAP,qBAAAmC,EAAA,0DAGpBnC,GAA6B,KAAfA,EAHM,uBAIpBsC,QAAQC,IAAI,GACZ+K,GAAW,GALS,SAMDvN,EAAkB,CAAEL,UAASC,ShBnInC,EgBmIwDK,aAAYC,eAN7D,OAMhBmC,EANgB,OAOpBkL,GAAW,GACW,IAAlBlL,EAAOtC,SAAe,EACEsC,EAAOtE,KAAvBsb,EADa,EACbA,MAAOY,EADM,EACNA,KACfb,EAAYa,GACZX,EAASD,GACTE,EAAW,IAZK,2CAAH,sDAkBnBY,EAAY,uCAAG,WAAOpa,GAAP,SAAAqC,EAAA,sEACIvC,EAAyBC,EAAWC,GADxC,OAEK,IAFL,OAENA,SACPnB,IAAQ0D,QAAQ,wCAChB0X,EAAYra,IAJC,2CAAH,sDAYlB,OAJAkD,qBAAU,kBAAMmX,EAAYra,KAAU,CAACA,IAEvCkD,qBAAU,kBAAMsX,EAAaP,KAAgB,CAACA,EAAc9Z,IAC5D8Y,IAAY,kBAAMsB,EAAoBja,KAAa,IAAM,CAACA,IAEtD,cAAC,KAAD,CAAM2F,MAAOA,EAAOsI,MAAOA,EAA3B,SACI,cAAC,KAAD,CACI5B,UAAQ,EACRC,OAAO,MACPC,WAAY2M,EACZ1N,QAASA,EACT6B,QAASA,EACTb,WAAY,CACR2N,QAASza,EACT0Z,QACA3M,gBhBtKK,EgBuKLiC,iBAAiB,EACjBjK,SAAU6U,O,wBCpKtBhW,GAAS8W,KAAT9W,KAIO,SAAS+W,KACpB,MAA2B1Y,mBAAS,IAApC,mBAAO2Y,EAAP,KAAcC,EAAd,KACA,EAA2B5Y,mBAAS,IAApC,mBAAO6Y,EAAP,KAAcC,EAAd,KAEMhZ,EAAWC,cACXxC,EAAW+H,cACjB3E,QAAQC,IAAIrD,GAEZ,MAAkEA,EAAS4a,MAApE3Z,EAAP,EAAOA,KAAMua,EAAb,EAAaA,KAAMb,EAAnB,EAAmBA,MAAOc,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,KAAKC,EAAvC,EAAuCA,YAAarb,EAApD,EAAoDA,WAC9CmG,EACF,iCACI,cAACtE,EAAD,UACK,cAACyZ,GAAA,EAAD,CACA9S,MAAO,CAACyG,YAAY,GAAGvG,SAAS,IAChCnD,QAAS,kBAAMtD,GAAU,QAI9B,+DAIFsZ,EAAW,uCAAG,oCAAA5Y,EAAA,yDACC,MAAd0Y,EADa,gCAEStb,EAAYC,GAFrB,OAEN4C,EAFM,OAGN4Y,EAAM5Y,EAAOtE,KAAKqC,KACxBoa,EAAUS,GAJE,wCAeUhd,QAAQid,IAAI,CAAC1b,EAAYsb,GAActb,EAAYC,KAf7D,QAeN0b,EAfM,OAgBAF,EAAOE,EAAQ,GAAGpd,KAAvBqC,KACKgb,EAAOD,EAAQ,GAAGpd,KAAvBqC,KACPoa,EAAUS,GACVP,EAAUU,GAnBE,4CAAH,qDAyBjB,OADAvY,qBAAU,WAAQmY,MAAiB,IAE/B,cAAC,KAAD,CAAMpV,MAAOA,EAAOpE,UAAU,iBAA9B,SAEI,eAAC,KAAD,CAAM8K,UAAQ,EAAC+O,WAAY,WAA3B,UACI,eAAC,GAAD,WACI,sBAAM7Z,UAAU,OAAhB,4CACA,+BAAOpB,OAEX,eAAC,GAAD,WACI,sBAAMoB,UAAU,OAAhB,4CACA,+BAAOmZ,OAEX,eAAC,GAAD,WACI,sBAAMnZ,UAAU,OAAhB,4CACA,iCAAOsY,EAAP,eAEJ,eAAC,GAAD,WACI,sBAAMtY,UAAU,OAAhB,4CACA,iCAAO+Y,EAAP,IAAgBE,EAAS,WAAQA,EAAS,SAE9C,eAAC,GAAD,WACI,sBAAMjZ,UAAU,OAAhB,4CACA,+BAEQqZ,EAAKjT,KAAI,SAAA0T,GAAG,OACR,qBAEEtY,IAAK4H,GAAe0Q,EACpB9Z,UAAU,cACV0B,IAAI,OAHCoY,WASvB,eAAC,GAAD,WAKI,sBAAM9Z,UAAU,OAAhB,uCACA,sBAAM+Z,wBAAyB,CAAEC,OAAQZ,a,wBCxFvDa,GAAeC,sBAAW,SAACna,EAAOoa,GACtC,IAAQd,EAAStZ,EAATsZ,KAEJe,EAAY,GACZf,GAAQA,EAAKzW,OAAS,IACxBwX,EAAYf,EAAKjT,KAAI,SAAC0T,EAAKO,GAAN,MAAiB,CACpCC,KAAMD,EACNzb,KAAMkb,EACNvb,OAAQ,OACRjC,IAAK8M,GAAe0Q,OAGxB,MAA4C1Z,oBAAS,GAArD,mBAAOma,EAAP,KAAuBC,EAAvB,KACA,EAAwCpa,mBAAS,IAAjD,mBAAOqa,EAAP,KAAqBC,EAArB,KACA,EAAgCta,mBAASga,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAIAC,8BAAoBV,GAAK,iBAAO,CAC9BW,cAGF,IAAMA,EAAU,WACd,OAAOH,EAASvU,KAAI,SAAA2U,GAAI,OAAIA,EAAKnc,SAG7Boc,EACJ,gCACE,cAACrO,GAAA,EAAD,IACA,4CAmBEsO,EAAY,uCAAG,uCAAAra,EAAA,yDAASma,EAAT,EAASA,KAAMJ,EAAf,EAAeA,SAClC5Z,QAAQC,IAAI,iBAAkB+Z,EAAKxc,OAAQoc,EAAS/X,OAAQmY,IAASJ,EAASA,EAAS/X,OAAS,IAChG7B,QAAQC,IAAI2Z,GAEQ,SAAhBI,EAAKxc,OAJU,gBAMK,KADhBsC,EAASka,EAAK9d,UACTsB,QACTnB,IAAQ0D,QAAQ,yCADO,EAEDD,EAAOtE,KAArBqC,EAFe,EAEfA,KAAMtC,EAFS,EAETA,KACdye,EAAOJ,EAASA,EAAS/X,OAAS,IAC7BhE,KAAOA,EACZmc,EAAKze,IAAMA,GAEXc,IAAQD,MAAM,wCAbC,0BAeQ,YAAhB4d,EAAKxc,OAfG,kCAgBII,EAAaoc,EAAKnc,MAhBtB,QAiBK,IAjBL,OAiBNL,OACTnB,IAAQ0D,QAAQ,yCAEhB1D,IAAQD,MAAM,yCApBC,QAwBnByd,EAAYD,GAxBO,4CAAH,sDA2BlB,OACE,gCACE,cAAC,KAAD,CACEO,OAAO,qBACPC,OAAO,UACPvc,KAAK,QACLwc,SAAS,eACTT,SAAUA,EACVU,UA9CgB,SAAAN,GACpBha,QAAQC,IAAI,kBAAmB+Z,GAE/BL,EAAgBK,EAAKze,KAAOye,EAAKO,UACjCd,GAAkB,IA2CdtX,SAAU+X,EAPZ,SASGN,EAAS/X,QAAU,EAAI,KAAOoY,IAGjC,cAAC,IAAD,CAAO7P,QAASoP,EAAgBgB,OAAQ,KAAM/U,SAtD7B,kBAAMgU,GAAkB,IAsDzC,SACE,qBAAK9Y,IAAI,UAAU+E,MAAO,CAAEmG,MAAO,QAAUpL,IAAKiZ,YAY3CR,M,8DCtCAuB,I,OA/DQtB,sBAAW,SAACna,EAAOoa,GACxC,IAAQf,EAAWrZ,EAAXqZ,OACJqC,EAAeC,eAAYC,cAC/B,GAAIvC,EAAQ,CACV,IAAMwC,EAAeC,KAAYzC,GAC3B0C,EAAeC,gBAAaC,qBAAqBJ,EAAaK,eACpER,EAAeC,eAAYQ,kBAAkBJ,GAG/C,MAAoC1b,mBAASqb,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAGAvB,8BAAoBV,GAAK,iBAAO,CAC9BkC,gBAEF,IAAMA,EAAY,WAEhB,OAAOC,KAAYC,wBAAaJ,EAAYK,uBA4B9C,OACE,cAAC,UAAD,CACIL,YAAaA,EAEbM,YAAa,CAACC,OAAQ,kBAAmBtU,UAAW,IAAKuU,YAAa,IACtEC,oBA9BsB,SAACT,GAE3BC,EAAeD,IA6BXU,QAAS,CACPC,MAAO,CAAEC,eA5BW,SAAChC,GAC3B,OAAO,IAAIte,SACT,SAACC,EAASC,GACR,IAAMqgB,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,sBACjB,IAAM3gB,EAAO,IAAI4gB,SACjB5gB,EAAK6gB,OAAO,QAASrC,GACrBiC,EAAIK,KAAK9gB,GACTygB,EAAIM,iBAAiB,QAAQ,WAC3B,IACMhhB,EADWihB,KAAKC,MAAMR,EAAIS,cACXlhB,KAAKD,IAC1BI,EAAQ,CAACH,KAAM,CAACmhB,KAAMphB,QAExB0gB,EAAIM,iBAAiB,SAAS,WAC5B,IAAMngB,EAAQogB,KAAKC,MAAMR,EAAIS,cAC7B9gB,EAAOQ,UAasCuE,IAAK,CAAEic,SAAS,EAAMC,WAAW,WChDhF7b,GAASxB,IAATwB,KACA8b,GAAaC,IAAbD,SAIO,SAASE,KACpB,IAAM7d,EAAWC,cAEX6d,EAAKC,mBACLC,EAASD,mBAEf,EAA8B7d,mBAAS,IAAvC,mBAAO+d,EAAP,KAAgBC,EAAhB,KAEA,EAAe7d,IAAKC,UAAbC,EAAP,oBAEM4d,EADW3Y,cACS6S,MAEpBzZ,EAAUuf,GAAY,GACpB/E,EAA8Cxa,EAA9Cwa,YAAarb,EAAiCa,EAAjCb,WAAYob,EAAqBva,EAArBua,KAAMD,EAAeta,EAAfsa,OAAOra,EAAQD,EAARC,IAExCuf,EAAc,GAChBD,IAEoB,MAAhB/E,GAIAgF,EAAYzJ,KAAKyE,GAHjBgF,EAAYzJ,KAAK5W,IAOzB,IAAMyC,EAAQ,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DAGNhC,EAAkC+B,EAAlC/B,KAAMua,EAA4BxY,EAA5BwY,KAAMb,EAAsB3X,EAAtB2X,MAEM,KAFCgG,EAAe3d,EAAf2d,aAEV1b,QACd0W,EAAc,IACdrb,EAAaqgB,EAAY,KAEzBhF,EAAcgF,EAAY,GAC1BrgB,EAAaqgB,EAAY,IAErBjF,EAAO2E,EAAGpF,QAAQkC,UAClB1B,EAAS8E,EAAOtF,QAAQyD,YAIxBvd,EAAU,CAACF,OAAMua,OAAMb,QAAOe,OAAMD,SAAQE,cAAarb,cAG5DogB,IACCvf,EAAQC,IAAIA,GArBH,SAyBQF,EAAsBC,GAzB9B,OA4BO,IA5BP,OA4BFP,QACTnB,IAAQ0D,QAAR,UAAmBud,EAAW,eAAO,eAArC,8BACAne,GAAU,IAEV9C,IAAQD,MAAR,UAAiBkhB,EAAW,eAAO,eAAnC,8BAhCW,4CAAH,sDAsCRE,EAAW,uCAAG,WAAOC,GAAP,mBAAA5d,EAAA,yDAEVud,EAAUK,EAAUpY,KAAI,SAAAmF,GAAC,MAAK,CAChC5I,MAAO4I,EAAExM,IACToK,MAAOoC,EAAE3M,KACT6f,QAAQ,OAGRJ,GAA4B,MAAhB/E,EARA,gCAUe9M,EAAc8M,GAV7B,OAUNoF,EAVM,OAYNC,EAAeD,EAAatY,KAAI,SAAAmF,GAAC,MAAK,CACxC5I,MAAO4I,EAAExM,IACToK,MAAOoC,EAAE3M,SAGQuf,EAAQ/W,MAAK,SAAA0N,GAAM,OAAIA,EAAOnS,QAAU2W,KAEhD9U,SAAWma,EAnBZ,OAsBhBP,EAAWD,GAtBK,2CAAH,sDA0BX3R,EAAa,uCAAG,WAAO3O,GAAP,iBAAA+C,EAAA,sEACGhD,EAAcC,GADjB,UAEI,KADhBgD,EADY,QAEPtC,OAFO,oBAGRigB,EAAY3d,EAAOtE,KACR,MAAbsB,EAJU,gBAKV0gB,EAAYC,GALF,gDAOHA,GAPG,gCAWdphB,IAAQD,MAAM,oDAXA,4CAAH,sDAgBbyhB,EAAQ,uCAAG,WAAMC,GAAN,mBAAAje,EAAA,6DACPke,EAAeD,EAAgBA,EAAgBjc,OAAS,IACjDkJ,SAAU,EAFV,SAIcU,EAAcsS,EAAanc,OAJzC,OAIP+b,EAJO,OAMbI,EAAahT,SAAU,EAEnB4S,GAAgBA,EAAa9b,OAAS,GAEhC+b,EAAeD,EAAatY,KAAI,SAAAmF,GAAC,MAAK,CACxC5I,MAAO4I,EAAExM,IACToK,MAAOoC,EAAE3M,SAGbkgB,EAAata,SAAWma,GAExBG,EAAaL,QAAS,EAG1BL,EAAW,aAAID,IApBF,2CAAH,sDAuBd9c,qBAAU,WACNmL,EAAc,KACd/L,EAAKa,eAAe,CAChB1C,KAAME,EAAQF,KACdua,KAAMra,EAAQqa,KACdb,MAAOxZ,EAAQwZ,MACfgG,kBAGL,IACH,IAAMla,EACF,iCACI,cAACtE,EAAD,UACI,cAACyZ,GAAA,EAAD,CACI9S,MAAO,CAAEyG,YAAa,GAAIvG,SAAU,IACpCnD,QAAS,kBAAMtD,GAAU,QAIjC,+BAAOme,EAAW,2BAAS,gCAGnC,OACI,cAAC,KAAD,CAAMja,MAAOA,EAAb,SACI,eAAC,IAAD,CACI3D,KAAMA,EACNwI,SAAU,CAAET,KAAM,GAClBU,WAAY,CAAEV,KAAM,GACpB9H,SAAUA,EACVmB,eAjGW,SAACC,GACpBf,QAAQC,IAAI,2BAAQc,IA2FhB,UAOI,cAAC,GAAD,CACIlD,KAAK,OACLuK,MAAM,2BACNnH,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAHvC,SAMI,cAAC,IAAD,CAAOoF,YAAY,iDAEvB,cAAC,GAAD,CACI5D,KAAK,OACLuK,MAAM,2BACNnH,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAHvC,SAKI,cAACygB,GAAD,CAAUrb,YAAY,6CAAUuc,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAErE,cAAC,GAAD,CACIrgB,KAAK,QACLuK,MAAM,2BACNnH,MAAO,CACH,CAAEC,UAAU,EAAM7E,QAAS,oDAC3B,CACIqF,UAAW,SAACC,EAAGC,GACX,OAAIA,GAAiB,EAARA,GAAa,EACflG,QAAQE,OAAO,IAAIkG,MAAM,0CAEzBpG,QAAQC,aAVnC,SAeI,cAAC,IAAD,CAAOF,KAAK,SAASgG,YAAY,6CAAU0c,WAAW,aAE1D,cAAC,GAAD,CACItgB,KAAK,cACLuK,MAAM,2BACNnH,MAAO,CAAC,CAAEC,UAAU,EAAM7E,QAAS,qDAHvC,SAKI,cAAC,KAAD,CAAUoF,YAAY,6CAAU2b,QAASA,EAASS,SAAUA,MAGhE,cAAC,GAAD,CAAMzV,MAAM,2BAAZ,SACI,cAAC,GAAD,CAAcgR,IAAK6D,EAAI3E,KAAMA,MAEjC,cAAC,GAAD,CAAMlQ,MAAM,2BAAOF,SAAU,CAAET,KAAM,GAAKU,WAAY,CAAEV,KAAM,IAA9D,SACI,cAAC,GAAD,CAAgB2R,IAAK+D,EAAQ9E,OAAQA,MAEzC,cAAC,GAAD,UACI,cAAC,IAAD,CAAQ5c,KAAK,UAAU+G,SAAS,SAAhC,iCChNL,SAAS4b,KACpB,OAQI,cANA,CAMC,IAAD,WACI,cAAC,IAAD,CAAO1Z,KAAK,QAAQ2Z,QAAS,cAACnf,EAAD,MAC7B,eAAC,IAAD,CAAOwF,KAAK,IAAI2Z,QAAS,cAACjX,GAAD,IAAzB,UACI,cAAC,IAAD,CAAOkS,OAAK,EAAC+E,QAAS,cAACzN,GAAD,MACtB,cAAC,IAAD,CAAOlM,KAAK,WAAW2Z,QAAS,cAAC1T,GAAD,MAChC,eAAC,IAAD,CAAOjG,KAAK,UAAU2Z,QAAS,cAAC3M,GAAD,IAA/B,UACI,cAAC,IAAD,CAAO4H,OAAK,EAAC+E,QAAS,cAAC1H,GAAD,MACtB,cAAC,IAAD,CAAOjS,KAAK,SAAS2Z,QAAS,cAACtG,GAAD,MAC9B,cAAC,IAAD,CAAOrT,KAAK,YAAY2Z,QAAS,cAACrB,GAAD,SAErC,cAAC,IAAD,CAAOtY,KAAK,OAAO2Z,QAAS,cAAC/V,GAAD,MAC5B,cAAC,IAAD,CAAO5D,KAAK,OAAO2Z,QAAS,cAAChM,GAAD,MAC5B,cAAC,IAAD,CAAO3N,KAAK,aAAa2Z,QAAS,cAAC7K,GAAD,MAClC,cAAC,IAAD,CAAO9O,KAAK,aAAa2Z,QAAS,cAAC/J,GAAD,MAClC,cAAC,IAAD,CAAO5P,KAAK,cAAc2Z,QAAS,cAAChK,GAAD,SAGvC,cAAC,IAAD,CAAO3P,KAAK,IAAI2Z,QAAS,cAAC7W,GAAD,S,WCnC/BlJ,GAAO6B,EAAavB,UAC1BsB,EAAY5B,KAAOA,GAInBggB,IAASlV,OAIL,cAAC,IAAD,UACI,cAACgV,GAAD,MAERG,SAASC,eAAe,W","file":"static/js/main.f49ddfe3.chunk.js","sourcesContent":["/**\r\n * 发送异步ajax请求的函数模块\r\n * 封装axios库\r\n * 函数返回值promise对象\r\n * 优化1: 统一处理请求异常?\r\n * 在外层包一个自己创建的promise对象\r\n * 在请求出错时, 不reject(error), 而是显示错误提示\r\n * 优化2: 异步得到不是reponse, 而是response.data\r\n * 在请求成功resolve时: resolve(response.data)\r\n */\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\nexport default function ajax(url,data={},type='GET') {\r\n    return new Promise((resolve,reject) => {\r\n        let promise;\r\n        // 执行异步ajax请求\r\n        if(type==='GET'){//发GET请求\r\n            promise=axios.get(url,{\r\n                params:data\r\n            })\r\n        }else{//发POST请求\r\n            promise=axios.post(url,data)\r\n        }\r\n        // 如果请求成功了，调用resolve(value)\r\n        // 该方法返回一个以response.data值解析后的Promise对象\r\n        promise.then(response => {\r\n            resolve(response.data)\r\n            // console.log(response.data)\r\n        // 如果请求失败了，不调用reject(reason)，而是提示异常信息   \r\n        }).catch(error => {\r\n            message.error('请求出错了：'+error.message)\r\n        })\r\n    })\r\n \r\n}\r\n","/**\r\n * 要求: 能根据接口文档定义接口请求\r\n * 包含应用中所有接口请求函数的模块\r\n * 每个函数的返回值都是promise\r\n */\r\nimport ajax from \"./ajax\";\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n\r\n// 登陆 ajax第二个参数必须是对象，username:username => username 匹配请求参数\r\nexport const reqLogin = (username, password) => ajax(BASE+'/login', { username, password }, 'POST')\r\n// 天气\r\nexport const reqWeather = (key, location) => ajax('https://devapi.qweather.com/v7/weather/now', { key, location })\r\n// reqWeather('d6d54c0f8bb54160b97507ce068abda8','101010100')\r\n// 获取一级/二级分类列表\r\nexport const reqCateGories = (parentId) => ajax(BASE+'/manage/category/list', { parentId })\r\n// 添加分类 传两个属性\r\nexport const reqAddCateGory = (categoryName, parentId) => ajax(BASE+'/manage/category/add', { categoryName, parentId }, 'POST')\r\n// 更新分类 传一个对象 解构 外部传的时候名字要一致\r\nexport const reqUpdateCateGories = ({ categoryName, categoryId }) => ajax(BASE+'/manage/category/update', { categoryName, categoryId }, 'POST')\r\n// 获取分类（根据分类ID）\r\nexport const reqCategory = (categoryId) => ajax(BASE+'/manage/category/info', {categoryId})\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE+'/manage/product/list', { pageNum, pageSize })\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdatesProductsStatus = (productId, status) => ajax(BASE+'/manage/product/updateStatus', { productId, status }, 'POST')\r\n// 搜索商品分页列表 (根据商品名称/商品描述)\r\n// searchType: 搜索的类型, productName/productDesc\r\n// searchName: 关键字\r\nexport const reqSearchProducts = ({ pageNum, pageSize, searchName, searchType }) =>\r\n    ajax(BASE+'/manage/product/search', {\r\n        pageNum,\r\n        pageSize,\r\n        [searchType]: searchName,\r\n    })\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE+'/manage/img/delete', {name}, 'POST')\r\n// 添加/修改商品 product本身就是对象\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE+'/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE+'/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE+'/manage/role/add', {roleName}, 'POST')\r\n// 添加角色 role本身就是对象\r\nexport const reqUpdateRole = (role) => ajax(BASE+'/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE+'/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE+'/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户 user本身就是对象\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE+'/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')","export default __webpack_public_path__ + \"static/media/hat.045f0d90.svg\";","/**\r\n * 用来在内存保存一些数据的工具模块\r\n */\r\nconst user = { user: {} }// 保存当前登陆的user\r\nexport default user\r\n","import store from 'store'\r\n/**\r\n * 进行local数据存储管理的工具模块\r\n */\r\n\r\nconst USER_KEY = 'user_key'\r\nconst userLogin = {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}\r\nexport default userLogin","import React from 'react'\r\nimport './index.less'\r\n/**\r\n * 外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n    return <button {...props} className = \"link-button\"></button>\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { reqLogin } from '../../api'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './index.less'\r\nimport hat from '../../assets/images/hat.svg'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport LinkButton from '../../components/link-button'\r\n/**\r\n * 登录的路由组件(函数式组件)\r\n * 类式路由组件在onFinish中拿不到history\r\n *  */\r\nexport default function Login() {\r\n    const navigate = useNavigate();\r\n    const [isRemember, setIsRemember] = useState(true)\r\n    const [form] = Form.useForm()    //antd的Form组件的方法\r\n\r\n    // 提交表单且数据验证成功后回调事件\r\n    const onFinish = async values => {\r\n        const { username, password } = values;\r\n        const result = await reqLogin(username, password);//发送AJAX\r\n        if (result.status === 0) { // 登陆成功\r\n            message.success('登陆成功')\r\n            // 保存user            \r\n            const user = result.data\r\n            console.log(user)\r\n            memoryUtils.user = user // 保存在内存中\r\n            storageUtils.saveUser(user) // 保存到local中\r\n            // 跳转到管理界面 (不需要再回退回到登陆)\r\n            navigate('/', { replace: true })\r\n        } else {\r\n            message.error(result.msg)\r\n        }\r\n\r\n    }\r\n    // 提交表单且数据验证失败后回调事件\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('校验失败', errorInfo);\r\n    };\r\n    useEffect(() => {\r\n        if (isRemember) {\r\n            form.setFieldsValue({ username: 'admin', password: 'admin' })\r\n        } else {\r\n            form.resetFields()\r\n        }\r\n        // eslint-disable-next-line \r\n    }, [isRemember])\r\n    // 静态页面\r\n    const staticPage = () => {\r\n        const user = {\r\n            \"_id\": {\r\n                \"$oid\": \"6198ff0202576ee4ac9d6abd\"\r\n            },\r\n            \"username\": \"admin\",\r\n            \"password\": \"21232f297a57a5a743894a0e4a801fc3\",\r\n            \"create_time\": 1637416706425,\r\n            \"__v\": 0,\r\n            'role':{\r\n                'menus':[]\r\n            }\r\n        }\r\n        // user.role.menus=[]\r\n        memoryUtils.user = user // 保存在内存中\r\n        storageUtils.saveUser(user) // 保存到local中\r\n        // 跳转到管理界面 (不需要再回退回到登陆)\r\n        navigate('/', { replace: true })\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <header className=\"login-header\">\r\n                <img src={hat} alt=\"logo\" />               \r\n                <h1>One Piece 商城后台管理系统</h1>\r\n            </header>\r\n            <section className=\"login-content\">\r\n                <h2>用户登录</h2>\r\n                <Form\r\n                    form={form}\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: isRemember }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        // 校验规则，设置字段的校验逻辑。\r\n                        // whitespace\t如果字段仅包含空格则校验不通过，只在type: 'string' 时生效\r\n                        rules={[\r\n                            { required: true, whitespace: true, message: '请输入你的用户名!' },\r\n                            { max: 12, message: '用户名最多十二位' },\r\n                            { min: 3, message: '用户名至少三位' },\r\n                            { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文,数字和下划线组成' },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        // validator 自定义校验，接收 Promise 作为返回值。\r\n                        rules={[{\r\n                            validator: (_, value) => {\r\n                                if (!value) {\r\n                                    return Promise.reject(new Error('密码必须输入'));\r\n                                } else if (value.length < 3 || value.length > 12) {\r\n                                    return Promise.reject(new Error('密码长度不能小于4位或大于12位'));\r\n                                    // ^表示字符串开始，$表示字符串结束 +号表示重复1到多次\r\n                                    // test检查一个字符串是否符合正则表达式的规则\r\n                                } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n                                    return Promise.reject(new Error('密码必须是英文，数字和下划线组成'));\r\n                                } else {\r\n                                    return Promise.resolve();\r\n                                }\r\n                            }\r\n                        }]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                            <Checkbox\r\n                                onChange={(v) => setIsRemember(v.target.checked)}\r\n                            >\r\n                                管理员登录\r\n                            </Checkbox>\r\n                        </Form.Item>\r\n                        <a className=\"react-doc\" href=\"https://zh-hans.reactjs.org/\">React文档</a>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <LinkButton onClick={staticPage}>\r\n                    跳转静态页面(访客登录)\r\n                </LinkButton>\r\n            </section>\r\n        </div>\r\n    )\r\n\r\n}","/**\r\n * 包含n个日期时间处理的工具函数模块\r\n */\r\n\r\n// 格式化日期\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' \r\n      + (date.getMonth() + 1) + '-' \r\n      + date.getDate() + ' ' \r\n      + date.getHours() + ':' \r\n      + date.getMinutes() + ':' \r\n      + date.getSeconds()\r\n}","import {\r\n  HomeOutlined,\r\n  AppstoreAddOutlined,\r\n  BarsOutlined,\r\n  ToolOutlined,\r\n  UserOutlined,\r\n  SafetyOutlined,\r\n  AreaChartOutlined,\r\n  BarChartOutlined,\r\n  PieChartFilled,\r\n  LineChartOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n  {\r\n    title: \"首页\", // 菜单标题名称\r\n    key: \"/\", // 对应的 path\r\n    icon: <HomeOutlined/>, // 图标名称\r\n  },\r\n  {\r\n    title: \"商品\",\r\n    key: \"/products\",\r\n    icon: <AppstoreAddOutlined />,\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \"品类管理\",\r\n        key: \"/category\",\r\n        icon: <BarsOutlined />,\r\n      },\r\n      {\r\n        title: \"商品管理\",\r\n        key: \"/product\",\r\n        icon: <ToolOutlined />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"用户管理\",\r\n    key: \"/user\",\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    title: \"角色管理\",\r\n    key: \"/role\",\r\n    icon: <SafetyOutlined />,\r\n  },\r\n  {\r\n    title: \"图形图表\",\r\n    key: \"/charts\",\r\n    icon: <AreaChartOutlined/>,\r\n    children: [\r\n      {\r\n        title: \"柱形图\",\r\n        key: \"/charts-bar\",\r\n        icon: <BarChartOutlined/>,\r\n      },\r\n      {\r\n        title: \"折线图\",\r\n        key: \"/charts-line\",\r\n        icon: <LineChartOutlined/>,\r\n      },\r\n      {\r\n        title: \"饼图\",\r\n        key: \"/charts-pie\",\r\n        icon: <PieChartFilled/>,\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default menuList;\r\n","import React,{useState,useEffect} from 'react'\r\nimport {useLocation,useNavigate} from 'react-router-dom'\r\nimport { Modal, message  } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport './index.less'\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport { reqWeather } from '../../api/index'\r\nimport menuList from '../../config/menuConfig'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport LinkButton from '../link-button'\r\nconst { confirm } = Modal;\r\n/**\r\n * 头部导航组件\r\n */\r\nexport default function Header() {\r\n    const username  = memoryUtils.user.username;\r\n    const [time,setTime] = useState(formateDate(Date.now()));\r\n    const [picUrl,setPicUrl] = useState('');\r\n    const [weather,setWeather] = useState('');\r\n    // console.log(useLocation())\r\n    const location =useLocation();\r\n    const path = location.pathname;\r\n    let navigate = useNavigate();\r\n    let title ='';\r\n    // 请求实时天气\r\n    const getWeather = async ()=>{\r\n        const result =await reqWeather('d6d54c0f8bb54160b97507ce068abda8','101010100');\r\n        if(result.code === \"200\"){\r\n            const {now:{icon,text}} = result\r\n            // const {icon,text} =now;\r\n            setPicUrl(icon)\r\n            // console.log(icon)\r\n            if(parseInt(icon)===154){\r\n                setPicUrl(104)\r\n            }\r\n            setWeather(text)\r\n        }else {\r\n            message.error('获取天气信息失败')\r\n        }\r\n        \r\n\r\n    }\r\n    // 动态显示当前时间和天气\r\n    useEffect(()=>{\r\n        getWeather();\r\n\r\n\t\tlet timer = setInterval(()=>{\r\n\t\t\tsetTime(formateDate(Date.now()) )\r\n\t\t},1000)\r\n\t\treturn ()=>{\r\n\t\t\tclearInterval(timer)\r\n\t\t}\r\n\t},[])\r\n    // 动态显示当前标题\r\n    const getTitle = menuList =>{\r\n        return menuList.map(item => {\r\n            if (!item.children) {\r\n                if (item.key===path){\r\n                    title = item.title\r\n                }               \r\n            } else {\r\n                getTitle(item.children)\r\n            }\r\n            return title\r\n          })\r\n    }\r\n    getTitle(menuList)\r\n    // 退出登录\r\n    const logout= () =>{\r\n        confirm({\r\n            title: '确定退出吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            // content: '真的确定退出吗',\r\n            onOk() {\r\n              // console.log('OK');\r\n              storageUtils.removeUser()\r\n              memoryUtils.user = {}\r\n              navigate('/login', { replace: true })\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n          });\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header-top\">\r\n                <span>欢迎，{username}</span>\r\n                <LinkButton onClick={logout}>退出</LinkButton>\r\n                {/* <a href=\"javascript:\" onClick={logout}>退出</a> */}\r\n            </div>\r\n            <div className=\"header-bottom\">\r\n                <div className=\"header-bottom-left\">{title}</div>\r\n                <div className=\"header-bottom-right\">\r\n                    <span>{time}</span>\r\n                    {/* 图标字体 */}\r\n                    <i className={\"qi-\"+picUrl+\"-fill\"} style={{color:'black',fontSize:'17px',margin:'0 15px'}}/>\r\n                    <span>{weather}</span>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\nimport hat from '../../assets/images/hat.svg'\r\nimport './index.less'\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst { SubMenu } = Menu;\r\n/**\r\n * 左侧导航的组件\r\n */\r\n\r\nexport default function LeftNav() {\r\n  // v5:withRouter高阶组件:包装非路由组件, 返回一个新的组件\r\n  // 新的组件向非路由组件传递3个属性: history/location/match\r\n  // v6:使用useLocation即可得到location属性，withRouter不再使用\r\n  let path = useLocation().pathname; \r\n  path = '/' + path.split(/\\//)[1]// 当前请求的含有子路由界面时过滤子路由地址\r\n  // console.log(path)\r\n  let openKey = '';\r\n  //  根据menu的数据数组生成对应的标签数组 \r\n  // map() 方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果。\r\n  // reduce()也可以实现。\r\n  const getMenuNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (hasAuth(item)) {\r\n        if (!item.children) {\r\n          return (\r\n            <Menu.Item key={item.key} icon={item.icon}>\r\n              <Link to={item.key}>{item.title}</Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          // find() 方法返回通过测试（函数内判断）的数组的第一个元素的值。\r\n          // const cItem = item.children.find(cItem => cItem.key === path1)\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            openKey = item.key     \r\n          }\r\n          \r\n          return (\r\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n              {getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }else{\r\n        return null\r\n      } \r\n    })\r\n  }\r\n\r\n  // 判断当前登陆用户对item是否有权限\r\n  const hasAuth = (item) => {\r\n    const { key } = item\r\n    // console.log(memoryUtils.user)\r\n    const menus = memoryUtils.user.role.menus\r\n    const username = memoryUtils.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 当前用户有此item的权限: key有没有在menus中\r\n     */\r\n    if (username === 'admin' || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) { // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n\r\n    return false\r\n  }\r\n  //出现这个warning的原因是钩子里调用的函数是在外部声明的。\r\n  // 刷新时调用一次，得到初始openKey\r\n  useMemo(() => {\r\n    getMenuNodes(menuList)\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  // getMenuNodes(menuList)\r\n  return (\r\n    <div className=\"left-nav\">\r\n\r\n      <Link to='/' className=\"left-nav-header\">\r\n        <img src={hat} alt=\"logo\" />\r\n        <h1>One Piece</h1>\r\n      </Link>\r\n      <Menu\r\n        //初始选中的菜单项 key 数组\r\n        // defaultSelectedKeys={[path]}\r\n        //当前选中的菜单项 key 数组\r\n        selectedKeys={[path]}\r\n        defaultOpenKeys={[openKey]}\r\n\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n      >\r\n\r\n        {/* {{}}代表对象,{}代表表达式 */}\r\n        {getMenuNodes(menuList)}\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport { Outlet,Navigate } from 'react-router-dom'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport Header from '../../components/header'\r\nimport LeftNav from '../../components/left-nav'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n/**\r\n * 后台管理的路由组件\r\n *  */\r\nexport default function Admin() {\r\n    const user = memoryUtils.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if (!user || !user._id) {\r\n        // 自动跳转到登陆(在render()中) Navigate替代Redirect\r\n        return <Navigate to='/login' />\r\n    }\r\n    return (\r\n        //antd的Layout布局\r\n        <Layout style={{ minHeight: '100%' }}>\r\n            <Sider>\r\n                <LeftNav />\r\n            </Sider>\r\n            <Layout>\r\n                <Header />           \r\n                <Content style={{ margin:20,backgroundColor: '#fff' }}>         \r\n                   <Outlet />{/* 占位符 */}\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center', color: '#cccccc' }}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './index.less'\r\n/**\r\n * 前台404页面\r\n */\r\n\r\nexport default function NotFound() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => navigate('/', { replace: true }) }>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst { Item } = Form\r\nconst { Option } = Select\r\n/**\r\n * 添加/修改用户的form组件\r\n */\r\n\r\nexport default function UserForm(props) {\r\n  const { roles, user, setForm } = props\r\n  const { username, _id, password, phone, email, role_id } = user\r\n  console.log(user)\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    form.setFieldsValue({ username, password, phone, email, role_id });\r\n    setForm(form)\r\n    // eslint-disable-next-line\r\n  }, [user]);\r\n  return (\r\n    <Form\r\n      form={form}\r\n      labelCol={{ span: 4 }} //左侧label宽度\r\n      wrapperCol={{ span: 15 }}//右侧包裹宽度\r\n    >\r\n      <Item label='用户名' name='username'>\r\n        <Input placeholder='请输入用户名' />\r\n      </Item>\r\n      {\r\n        _id ? null : (\r\n          <Item label='密码' name='password'>\r\n            <Input type='password' placeholder='请输入密码' />\r\n          </Item>\r\n        )\r\n      }\r\n      <Item label='手机号' name='phone'>\r\n        <Input placeholder='请输入手机号' />\r\n      </Item>\r\n      <Item label='邮箱' name='email'>\r\n        <Input placeholder='请输入邮箱' />\r\n      </Item>\r\n      <Item label='角色' name='role_id'>\r\n        <Select>\r\n          {\r\n            roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n          }\r\n        </Select>\r\n      </Item>\r\n    </Form>\r\n  )\r\n}\r\nUserForm.propTypes = {\r\n  setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  roles: PropTypes.array.isRequired,\r\n  user: PropTypes.object\r\n}","/**\r\n * 包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 4 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Table, Modal ,message} from 'antd'\r\nimport { formateDate } from '../../../utils/dateUtils'\r\nimport LinkButton from '../../../components/link-button'\r\nimport { reqUsers, reqAddOrUpdateUser,reqDeleteUser } from '../../../api/index'\r\nimport UserForm from './user-form'\r\nimport {PAGE_SIZE} from '../../../utils/constants'\r\n/**\r\n * 用户路由\r\n */\r\nexport default function User() {\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState({})\r\n    const [roles, setRoles] = useState([])\r\n    const [roleNames, setRoleNames] = useState([])\r\n    const [isShow, setIsShow] = useState(false)\r\n    const [formData, setFormData] = useState({})\r\n    \r\n\r\n    const title = (<Button type='primary' onClick={()=>showAdd()}>创建用户</Button>)\r\n    const columns = [\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'username'\r\n        },\r\n        {\r\n            title: '邮箱',\r\n            dataIndex: 'email'\r\n        },\r\n\r\n        {\r\n            title: '电话',\r\n            dataIndex: 'phone'\r\n        },\r\n        {\r\n            title: '注册时间',\r\n            dataIndex: 'create_time',\r\n            render: formateDate\r\n        },\r\n        {\r\n            title: '所属角色',\r\n            dataIndex: 'role_id',\r\n            render: (role_id) => roleNames[role_id]\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (user) => ( \r\n                <span>\r\n                    <LinkButton onClick={() => showUpdate(user)}>修改</LinkButton>\r\n                    <LinkButton onClick={() => deleteUser(user)}>删除</LinkButton>\r\n                </span>\r\n            )\r\n        },\r\n    ]\r\n    //   显示添加界面\r\n    const showAdd = () => {\r\n        setUser({}) // 去除前面保存的user\r\n        setIsShow(true)\r\n    }\r\n\r\n    //   显示修改界面\r\n    const showUpdate = (user) => {\r\n        setUser(user)// 保存user\r\n        setIsShow(true)\r\n    }\r\n  \r\n    // 删除指定用户\r\n    const deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `确认删除${user.username}吗?`,\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id)\r\n                if (result.status === 0) {\r\n                    message.success('删除用户成功!')\r\n                    getUsers()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    //   添加/更新用户\r\n    const addOrUpdateUser = async () => {\r\n        setIsShow(false)\r\n        // 1. 收集输入数据\r\n        const user1 = formData.getFieldsValue()\r\n        formData.resetFields()\r\n        // 如果是更新, 需要给user指定_id属性\r\n        if (user1) {\r\n          user1._id = user._id\r\n        }\r\n        // 2. 提交添加的请求\r\n        const result = await reqAddOrUpdateUser(user1)\r\n        // 3. 更新列表显示\r\n        if (result.status === 0) {\r\n            message.success(`${user1 ? '修改' : '添加'}用户成功`)\r\n            getUsers()\r\n        }\r\n    }\r\n    //   根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n    const initRoleNames = (roles) => {\r\n        const roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name\r\n            return pre\r\n        }, {})\r\n        // 保存\r\n        setRoleNames(roleNames)\r\n    }\r\n    // 获取用户信息\r\n    const getUsers = async () => {\r\n        const result = await reqUsers()\r\n        if (result.status === 0) {\r\n            const { users, roles } = result.data\r\n            initRoleNames(roles)\r\n            setUsers(users)\r\n            setRoles(roles)\r\n        }\r\n    }\r\n    // eslint-disable-next-line  \r\n    useEffect(() => { getUsers() }, [])\r\n    return (\r\n        <Card title={title}>\r\n            <Table\r\n                bordered\r\n                rowKey='_id'\r\n                dataSource={users}\r\n                columns={columns}\r\n                pagination={{ defaultPageSize: PAGE_SIZE }}\r\n            />\r\n            <Modal\r\n                title={user._id ? '修改用户' : '添加用户'}\r\n                visible={isShow}\r\n                onOk={addOrUpdateUser}\r\n                onCancel={() => {\r\n                    formData.resetFields()\r\n                    setIsShow(false)\r\n                }}\r\n            >\r\n                <UserForm\r\n                    setForm={form => setFormData(form)}\r\n                    roles={roles}\r\n                    user={user}\r\n                />\r\n            </Modal>\r\n        </Card>\r\n    )\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport { Form, Select, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst { Option } = Select;\r\n/**\r\n * 添加分类的form组件\r\n */\r\nexport default function AddForm(props) {\r\n    const { categories, parentId,setForm } = props\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        form.setFieldsValue({ categoryParentId:parentId });\r\n        setForm(form)\r\n    // eslint-disable-next-line\r\n    }, [parentId]);\r\n    return (\r\n        <Form form={form}>\r\n            <Form.Item name='categoryParentId' >\r\n                <Select>\r\n                    <Option value='0'>一级分类</Option>\r\n                    {\r\n                        categories.map(c =><Option value={c._id} key={c._id}>{c.name}</Option>)\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item \r\n            name='categoryName'  \r\n            rules={[{ required: true, message: \"分类名称必须输入\" }]}\r\n            >\r\n                <Input placeholder='请输入分类名称' />\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nAddForm.propTypes = {\r\n    categories:PropTypes.array.isRequired,//一级分类的数组\r\n    parentId:PropTypes.string.isRequired,//父分类的ID\r\n    setForm: PropTypes.func.isRequired,\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * 更新分类的form组件\r\n */\r\nexport default function UpdateForm(props) {\r\n    // 连续解构赋值加重命名\r\n    const { categoryData:{name:categoryName}, setForm } = props\r\n    // 创建 Form 实体\r\n    const [form] = Form.useForm();\r\n    //{ categoryName:categoryName}=>{ categoryName} \r\n    // 第一个是Form.Item的name，第二个是父组件传来的categoryName\r\n    useEffect(() => {\r\n        form.setFieldsValue({ categoryName });\r\n        setForm(form)\r\n    // eslint-disable-next-line\r\n    }, [categoryName]);\r\n    console.log(setForm)\r\n    console.log(typeof(categoryName))\r\n    return (\r\n        <Form form={form}>\r\n            <Form.Item name='categoryName' rules={[{ required: true, message: \"分类名称必须输入\" }]}>\r\n                <Input placeholder='请输入分类名称' />\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n//对接收的props进行：类型、必要性的限制\r\nUpdateForm.propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    categoryData:PropTypes.object.isRequired\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Table, Button, message, Modal } from 'antd'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../../components/link-button'\r\nimport { reqCateGories, reqUpdateCateGories,reqAddCateGory } from '../../../api/index'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/**\r\n * 商品分类路由\r\n */\r\nexport default function Category() {\r\n    const [categories, setCategories] = useState([]);// 一级分类列表\r\n    const [subCategories, setSubCategories] = useState([]);// 二级分类列表\r\n    const [loading, setLoading] = useState(false);//是否正在获取数据中\r\n    const [parentId, setParentId] = useState('0');//当前需要显示的分类列表的父分类ID\r\n    // const [parentName, setParentName] = useState('');//当前需要显示的分类列表的父分类名称\r\n    // 确认框 0：都不显示 1 显示添加 2 显示更新\r\n    const [showStatus, setShowStatus] = useState('0');\r\n    const [title, setTitle] = useState('一级分类列表');   // 左上角标题\r\n    const [categoryData, setCategoryData] = useState({}) //当前行的值\r\n    const [formData, setFormData] = useState({})//获得子组件传回的表单实体\r\n    // 显示添加的确认框\r\n    const showAdd = () => {\r\n        setShowStatus(1)\r\n    }\r\n    // 显示更新的确认框\r\n    const showUpadate = (category) => {\r\n        setCategoryData(category)\r\n        setShowStatus(2)\r\n    }\r\n    // 响应点击取消\r\n    const handleCancel = () => {\r\n        setShowStatus(0)\r\n    }\r\n    // 添加分类\r\n    const addCategory = async () => {\r\n        setShowStatus(0)\r\n        const {categoryParentId,categoryName} = formData.getFieldValue()\r\n        const result = await reqAddCateGory(categoryName, categoryParentId)\r\n        // 添加的父ID和当前父ID相同时，重新获取当前分类列表显示\r\n        if (result.status === 0 && parentId === categoryParentId) {\r\n            getCategories(parentId)\r\n        }\r\n\r\n    }\r\n    // 更新分类\r\n    const updateCategory = async () => {\r\n        setShowStatus(0)\r\n        const categoryId = categoryData._id\r\n        const categoryName = formData.getFieldValue('categoryName')\r\n        const result = await reqUpdateCateGories({ categoryName, categoryId })\r\n        if (result.status === 0) {\r\n            // 重新获取当前分类列表显示\r\n            getCategories(parentId)\r\n        }\r\n    }\r\n    const extra = (\r\n        <Button type='primary' onClick={showAdd}>\r\n            <PlusOutlined />\r\n            添加\r\n        </Button>\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: '分类名称',\r\n            dataIndex: 'name',//显示数据对应属性名\r\n        },\r\n        {\r\n            title: '操作',\r\n            width: 300,\r\n            // 参数分别为当前行的值\r\n            render: category => (//返回需要显示的界面标签\r\n                <span>\r\n                    {/* {console.log(category)} */}\r\n                    <LinkButton onClick={() => showUpadate(category)}>修改分类</LinkButton>\r\n                    {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n                    {parentId === '0'\r\n                        ? <LinkButton onClick={() => showSubCategories(category)}>\r\n                            查看子分类\r\n                        </LinkButton>\r\n                        : null}\r\n\r\n                </span>\r\n            ),\r\n        }\r\n    ];\r\n\r\n    // 异步获取一级/二级分类列表\r\n    const getCategories = async (parentId) => {\r\n        setLoading(true);\r\n        const result = await reqCateGories(parentId);\r\n        setLoading(false);\r\n        if (result.status === 0) {\r\n            if (parentId === '0') {\r\n                setCategories(result.data)\r\n            } else {\r\n                setSubCategories(result.data)\r\n            }\r\n\r\n        } else {\r\n            message.error('获取分类列表失败')\r\n        }\r\n    }\r\n    //返回一级分类对列表\r\n    const showFirstCategories = () => {\r\n        setParentId('0')\r\n        setSubCategories([])\r\n        // setParentName('')\r\n        setTitle('一级分类列表')\r\n    }\r\n    //显示指定一级分类对象的二级列表\r\n    const showSubCategories = (category) => {\r\n        setParentId(category._id)\r\n        // setParentName(category.name)\r\n        setTitle(\r\n            <span>\r\n                {console.log(category.name)}\r\n                <LinkButton onClick={showFirstCategories}>一级分类列表</LinkButton>\r\n                <ArrowRightOutlined style={{ marginRight: 5 }} />\r\n                <span>{category.name}</span>\r\n            </span>\r\n        )\r\n    }\r\n    // 父子分类切换时，重新获取当前分类列表显示\r\n    // eslint-disable-next-line  \r\n    useEffect(() => { getCategories(parentId) }, [parentId])\r\n\r\n    return (\r\n        <Card title={title} extra={extra} >\r\n            <Table\r\n                rowKey='_id'\r\n                bordered\r\n                pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                loading={loading}\r\n                dataSource={parentId === '0' ? categories : subCategories}\r\n                columns={columns} />\r\n            <Modal\r\n                title=\"添加分类\"\r\n                visible={showStatus === 1}\r\n                onOk={addCategory}\r\n                onCancel={handleCancel}>\r\n                <AddForm\r\n                    categories={categories}\r\n                    parentId={parentId}\r\n                    setForm={(form) => setFormData(form)}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                title=\"更新分类\"\r\n                visible={showStatus === 2}\r\n                onOk={updateCategory}\r\n                onCancel={handleCancel}>\r\n                <UpdateForm\r\n                    categoryData={categoryData}\r\n                    setForm={(form) => setFormData(form)}\r\n                />\r\n            </Modal>\r\n        </Card>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Axis,\r\n  Chart,\r\n  Tooltip,\r\n  Interval,\r\n  View,\r\n  Line,\r\n  Legend,\r\n  getTheme\r\n} from \"bizcharts\";\r\n\r\nconst theme = getTheme();\r\n\r\n\r\nexport default function LineDemo() {\r\n  const data = [\r\n    { name: '漫画', month: 'Jan.', monthAverageRain: 18.9 },\r\n    { name: '漫画', month: 'Feb.', monthAverageRain: 28.8 },\r\n    { name: '漫画', month: 'Mar.', monthAverageRain: 39.3 },\r\n    { name: '漫画', month: 'Apr.', monthAverageRain: 81.4 },\r\n    { name: '漫画', month: 'May', monthAverageRain: 47 },\r\n    { name: '漫画', month: 'Jun.', monthAverageRain: 20.3 },\r\n    { name: '漫画', month: 'Jul.', monthAverageRain: 24 },\r\n    { name: '漫画', month: 'Aug.', monthAverageRain: 35.6 },\r\n    { name: '手办', month: 'Jan.', monthAverageRain: 12.4 },\r\n    { name: '手办', month: 'Feb.', monthAverageRain: 23.2 },\r\n    { name: '手办', month: 'Mar.', monthAverageRain: 34.5 },\r\n    { name: '手办', month: 'Apr.', monthAverageRain: 99.7 },\r\n    { name: '手办', month: 'May', monthAverageRain: 52.6 },\r\n    { name: '手办', month: 'Jun.', monthAverageRain: 35.5 },\r\n    { name: '手办', month: 'Jul.', monthAverageRain: 37.4 },\r\n    { name: '手办', month: 'Aug.', monthAverageRain: 42.4 },\r\n  ];\r\n  const average = data.reduce((pre, item) => {\r\n    const { month, monthAverageRain } = item;\r\n    if (!pre[month]) {\r\n      pre[month] = 0\r\n    }\r\n    pre[month] += (monthAverageRain);\r\n    return pre;\r\n  }, {});\r\n\r\n  const averageData = Object.keys(average).map(key => {\r\n    return { month: key, averageRain: Number((average[key] / 2).toFixed(2)), name: 'avg' }\r\n  })\r\n\r\n  const scale = {\r\n    month: {\r\n      sync: true\r\n    },\r\n    averageRain: {\r\n      min: 0,\r\n      max: 100,\r\n      alias: 'Average'\r\n    },\r\n    monthAverageRain: {\r\n      min: 0,\r\n      max: 100\r\n    }\r\n  }\r\n\r\n  const colors = theme.colors10;\r\n  /**\r\n   * 图例开关状态\r\n   */\r\n  let legendMap = {}\r\n  /**\r\n   * 图表实例\r\n   */\r\n  let chartIns;\r\n  return (\r\n    <div className='line'>\r\n      <Chart height={250}  scale={scale}\r\n        data={data} autoFit\r\n        onGetG2Instance={c => chartIns = c}>\r\n        <Tooltip shared />\r\n        <Interval\r\n          adjust={[\r\n            {\r\n              type: 'dodge',\r\n              marginRatio: 0,\r\n            },\r\n          ]}\r\n          color={[\"name\", colors]}\r\n          position=\"month*monthAverageRain\"\r\n        />\r\n        <Axis name='monthAverageRain' position='left' />\r\n        <View data={averageData} scale={scale} padding={0} >\r\n          <Axis name='averageRain' position='right' />\r\n          <Line\r\n            position=\"month*averageRain\"\r\n            color={colors[2]}\r\n          />\r\n        </View>\r\n        <Legend custom={true} items={[\r\n          {\r\n            name: \"漫画\", value: '漫画', marker: {\r\n              symbol: 'square',\r\n              style: { fill: colors[0] }\r\n            }\r\n          },\r\n          {\r\n            name: \"手办\", value: '手办', marker: {\r\n              symbol: 'square',\r\n              style: { fill: colors[1] }\r\n            }\r\n          },\r\n          {\r\n            name: \"平均\", value: 'avg', marker: {\r\n              symbol: 'hyphen',\r\n              style: { stroke: colors[2], lineWidth: 2 }\r\n            },\r\n          }]}\r\n          onChange={(ev) => {\r\n            const { item } = ev;\r\n            const { value } = item;\r\n            const checked = !item.unchecked;\r\n            // 设置图例项状态\r\n            legendMap[value] = checked;\r\n            if (value === 'avg') {\r\n              // 通过filter控制元素显示隐藏\r\n              const view = chartIns.views[0];\r\n              view.filter('name', (val) => {\r\n                return legendMap[val]\r\n              })\r\n              // 重新渲染，触发filter\r\n              view.render(true)\r\n            } else {\r\n              // 通过filter控制元素显示隐藏\r\n              chartIns.filter('name', (val) => {\r\n                return legendMap[val] !== false\r\n              })\r\n              // 重新渲染，触发filter\r\n              chartIns.render(true)\r\n            }\r\n          }}\r\n        />\r\n\r\n      </Chart>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Chart,\r\n  View,\r\n  Tooltip,\r\n  Schema,\r\n  Axis,\r\n  Interval,\r\n} from 'bizcharts';\r\nimport DataSet from '@antv/data-set';\r\n\r\n\r\nexport default function StockDemo() {\r\n  const [data, setData] = useState();\r\n   useEffect(() => {\r\n     fetch('https://alifd.alibabausercontent.com/materials/@bizcharts/candlestick-basic/0.3.2/mock.json')\r\n       .then(res => res.json())\r\n       .then(data => {\r\n          const ds = new DataSet();\r\n          const dv = ds.createView();\r\n          dv.source(data)\r\n            .transform({\r\n              type: 'map',\r\n              callback: obj => {\r\n                obj.trend = (obj.start <= obj.end) ? '上涨' : '下跌';\r\n                obj.range = [obj.start, obj.end, obj.max, obj.min];\r\n                return obj;\r\n              }\r\n            });\r\n           console.log(dv)\r\n           setData(dv.rows);\r\n       })\r\n   }, [])\r\n   \r\n   return <Chart\r\n    //  height={350}\r\n     padding={[10, 40, 40, 40]}\r\n     data={data}\r\n     autoFit\r\n     scale={{\r\n        time: {\r\n        type: 'timeCat',\r\n        range: [0, 1],\r\n        tickCount: 4,\r\n        },\r\n        \r\n        volumn: { alias: '成交量' },\r\n        start: { alias: '开盘价' },\r\n        end: { alias: '收盘价' },\r\n        max: { alias: '最高价' },\r\n        min: { alias: '最低价' },\r\n        range: { alias: '股票价格' }\r\n     }}\r\n   >\r\n     <Tooltip\r\n        showTitle={false}\r\n        showMarkers={true}\r\n        itemTpl={'<li class=\"g2-tooltip-list-item\" data-index={index}>'\r\n          + '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>'\r\n          + '{name}{value}</li>'}\r\n     />\r\n    <View\r\n      data={data}\r\n      region={{\r\n        start: { x: 0, y: 0 },\r\n        end: { x: 1, y: 0.7 },\r\n      }}\r\n    >\r\n      <Schema\r\n        position={'time*range'}\r\n        shape={'candle'}\r\n        color={[\r\n          'trend', val => {\r\n            if (val === '上涨') {\r\n              return '#f04864';\r\n            }\r\n    \r\n            if (val === '下跌') {\r\n              return '#2fc25b';\r\n            }\r\n          }\r\n        ]}\r\n        tooltip={[\r\n        'time*start*end*max*min',\r\n        (time, start, end, max, min) => {\r\n          return {\r\n            name: time,\r\n            value: '<br><span style=\"padding-left: 16px\">开盘价：' + start + '</span><br/>'\r\n              + '<span style=\"padding-left: 16px\">收盘价：' + end + '</span><br/>'\r\n              + '<span style=\"padding-left: 16px\">最高价：' + max + '</span><br/>'\r\n              + '<span style=\"padding-left: 16px\">最低价：' + min + '</span>'\r\n          }}\r\n        ]}\r\n      />\r\n    </View>\r\n    <View\r\n      data={data}\r\n      region={{\r\n        start: { x: 0, y: 0.7 },\r\n        end: { x: 1, y: 1 },\r\n      }}\r\n      scale={{\r\n        volumn: {\r\n          tickCount: 2,\r\n        }\r\n      }}\r\n    >\r\n    <Axis name=\"time\" tickLine={null} label={null} />\r\n    <Axis name=\"volumn\"\r\n      label={{\r\n          formatter: val => {\r\n            return +val / 1000 + 'k';\r\n          }\r\n        }}\r\n    />\r\n    <Interval\r\n      position={'time*volumn'}\r\n      color={['trend', val => {\r\n        if (val === '上涨') {\r\n          return '#f04864';\r\n        }\r\n\r\n        if (val === '下跌') {\r\n          return '#2fc25b';\r\n        }\r\n      }]}\r\n      tooltip={['time*volumn', (time, volumn) => {\r\n        return {\r\n          name: time,\r\n          value: '<br/><span style=\"padding-left: 16px\">成交量：' + volumn + '</span><br/>'\r\n        };\r\n      }]}\r\n    />\r\n    </View>\r\n  </Chart>\r\n}","import React from 'react'\r\nimport {\r\n    Card,\r\n    Statistic,\r\n    DatePicker,\r\n    Timeline\r\n} from 'antd'\r\nimport { ReloadOutlined, ArrowUpOutlined, QuestionCircleOutlined, ArrowDownOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nimport LineDemo from './line'\r\nimport StockDemo from './stock'\r\nimport './index.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className='home'>\r\n            <Card\r\n                className=\"home-card\"\r\n                title=\"商品总量\"\r\n                extra={<QuestionCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />}\r\n                headStyle={{ color: 'rgba(0,0,0,.45)' }}\r\n            >\r\n                <Statistic\r\n                    value={1128163}\r\n                    suffix=\"个\"\r\n                    style={{ fontWeight: 'bolder' }}\r\n                />\r\n                <Statistic\r\n                    value={15}\r\n                    valueStyle={{ fontSize: 15 }}\r\n                    prefix={'周同比'}\r\n                    suffix={<div>%<ArrowDownOutlined style={{ color: 'red', marginLeft: 10 }} /></div>}\r\n                />\r\n                <Statistic\r\n                    value={10}\r\n                    valueStyle={{ fontSize: 15 }}\r\n                    prefix={'日同比'}\r\n                    suffix={<div>%<ArrowUpOutlined style={{ color: '#3f8600', marginLeft: 10 }} /></div>}\r\n                />\r\n            </Card>\r\n\r\n            <LineDemo/>\r\n\r\n            <Card\r\n                className=\"home-content\"\r\n                title={<div className=\"home-menu\">\r\n                </div>}\r\n                extra={<RangePicker\r\n                    defaultValue={[moment('2021/01/01', dateFormat), moment('2022/01/01', dateFormat)]}\r\n                    format={dateFormat}\r\n                />}\r\n            >\r\n                <Card\r\n                    className=\"home-table-left\"\r\n                    title= '股票走势'\r\n                    bodyStyle={{ padding: 0, height: 350 }}\r\n                    extra={<ReloadOutlined />}\r\n                >\r\n                    <StockDemo />\r\n                </Card>\r\n\r\n                <Card title='任务' extra={<ReloadOutlined />} className=\"home-table-right\">\r\n                    <Timeline>\r\n                        <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n                        <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n                        <Timeline.Item color=\"red\">\r\n                            <p>联调接口</p>\r\n                            <p>功能验收</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <p>登录功能设计</p>\r\n                            <p>权限验证</p>\r\n                            <p>页面排版</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </Card>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Outlet} from 'react-router-dom'\r\nimport './index.less'\r\nexport default function Product() {\r\n    return (\r\n        <div>\r\n            <Outlet/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * 添加分类的form组件\r\n */\r\nexport default function AddForm(props) {\r\n    const { setForm } = props\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        setForm(form)\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    return (\r\n        <Form form={form}>\r\n\r\n            <Form.Item\r\n                label='角色名称'\r\n                name='roleName'\r\n                rules={[{ required: true, message: \"角色名称必须输入\" }]}\r\n            >\r\n                <Input placeholder='请输入角色名称' />\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\nAddForm.propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tree\r\n} from 'antd'\r\nimport menuList from '../../../config/menuConfig'\r\nconst Item = Form.Item\r\n\r\nexport default function AuthForm(props) {\r\n    const { role,getMenus } = props\r\n    const {menus} = role\r\n    const [checkedKeys, setCheckedKeys] = useState([]);\r\n    const treeData = [\r\n        {\r\n          title: '平台权限',\r\n          key: 'all',\r\n          children:menuList\r\n        }\r\n    ]\r\n    const onCheck = (checkedKeysValue) => {\r\n        setCheckedKeys(checkedKeysValue);\r\n        \r\n      };\r\n  \r\n    useEffect(() => {\r\n        setCheckedKeys(menus) \r\n     // eslint-disable-next-line  \r\n    }, [menus])\r\n    useEffect(() => {\r\n        getMenus(checkedKeys)  \r\n     // eslint-disable-next-line  \r\n    }, [checkedKeys])\r\n    \r\n    return (\r\n        <Form>\r\n            <Item label='角色名称' >\r\n                <Input value={role.name} disabled />\r\n            </Item>\r\n            <Tree\r\n                checkable\r\n                defaultExpandAll={true}//默认展开\r\n                checkedKeys={checkedKeys}\r\n                onCheck={onCheck}\r\n                treeData={treeData}\r\n            />\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PAGE_SIZE } from '../../../utils/constants'\r\nimport { reqRoles, reqAddRole,reqUpdateRole } from '../../../api/index'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport memoryUtils from '../../../utils/memoryUtils'\r\nimport storageUtils from '../../../utils/storageUtils'\r\nimport {formateDate} from '../../../utils/dateUtils'\r\n/**\r\n * 角色路由 \r\n * */\r\nexport default function Role() {\r\n  const navigate = useNavigate();\r\n  const [roles, setRoles] = useState([])// 所有角色的列表\r\n  const [role, setRole] = useState({})// 选中的role\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n  const [isShowAdd, setIsShowAdd] = useState(false)// 是否显示添加界面\r\n  const [isShowAuth, setIsShowAuth] = useState(false)// 是否显示设置权限界面\r\n  const [formData, setFormData] = useState({})//获得子组件传回的表单实体\r\n  const [menus,setMenus]=useState([])\r\n  // console.log(menus)\r\n  const title = (\r\n    <span>\r\n      <Button type='primary' onClick={() => setIsShowAdd(true)}>创建角色</Button> &nbsp;&nbsp;\r\n      <Button type='primary' disabled={!role._id} onClick={() => setIsShowAuth(true)}>设置角色权限</Button>\r\n    </span>\r\n  )\r\n  const columns = [\r\n    {\r\n      title: '角色名称',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'create_time',\r\n      render: (create_time) => formateDate(create_time)\r\n    },\r\n    {\r\n      title: '授权时间',\r\n      dataIndex: 'auth_time',\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: '授权人',\r\n      dataIndex: 'auth_name'\r\n    },\r\n  ]\r\n  const onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        // console.log('row onClick()', role)\r\n        setRole(role)\r\n        setSelectedRowKeys([role._id])\r\n      },\r\n    }\r\n  }\r\n  // 获取角色\r\n  const getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      setRoles(roles)\r\n\r\n    }\r\n  }\r\n  // 添加角色\r\n  const addRole = async () => {\r\n    setIsShowAdd(false)// 执行完函数后关闭添加表单\r\n    // 收集输入数据\r\n    const { roleName } = formData.getFieldValue()\r\n    const result = await reqAddRole(roleName)\r\n    if (result.status === 0) {\r\n      message.success('添加角色成功')\r\n      getRoles()\r\n    } else {\r\n      message.error('添加角色失败')\r\n    }\r\n    formData.resetFields()//清空输入内容\r\n\r\n  }\r\n  \r\n  // 更新角色\r\n  const updateRole = async () => {\r\n    setIsShowAuth(false)\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = memoryUtils.user.username\r\n    console.log(role)\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {}\r\n        storageUtils.removeUser()\r\n        navigate('/login', { replace: true })\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        \r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  // eslint-disable-next-line  \r\n  useEffect(() => { getRoles() }, [])\r\n  return (\r\n    <Card title={title}>\r\n      <Table\r\n        bordered\r\n        rowKey='_id'\r\n        dataSource={roles}\r\n        columns={columns}\r\n        pagination={{ defaultPageSize: PAGE_SIZE }}\r\n        rowSelection={{\r\n          type: 'radio',\r\n          selectedRowKeys,\r\n          onChange: (selectedRowKeys) => setSelectedRowKeys(selectedRowKeys),\r\n          onSelect: (role) => setRole(role) // 选择某个radio时回调\r\n            \r\n        }}\r\n        onRow={onRow}\r\n      />\r\n      <Modal\r\n        title=\"添加角色\"\r\n        visible={isShowAdd}\r\n        onOk={addRole}\r\n        onCancel={() => {\r\n          setIsShowAdd(false)\r\n          formData.resetFields()//清空输入内容\r\n        }}>\r\n        <AddForm\r\n          setForm={(form) => setFormData(form)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        title=\"设置角色权限\"\r\n        visible={isShowAuth}\r\n        onOk={updateRole}\r\n        onCancel={() => {\r\n          setIsShowAuth(false)\r\n        }}>\r\n        <AuthForm role={role} getMenus={(menus)=>setMenus(menus)}/>\r\n      </Modal>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default function Bar() {\r\n    const [sales, setSales] = useState([5, 20, 36, 10, 10, 20])// 销量的数组\r\n    const [stores, setStores] = useState([6, 10, 25, 20, 15, 10])// 库存的数组\r\n    const update = () => {\r\n        setSales(sales.map(sale => sale + 1))\r\n        setStores(stores.reduce((pre, store) => {\r\n            pre.push(store - 1)\r\n            return pre\r\n        }, []))\r\n    }\r\n   \r\n    //   返回柱状图的配置对象   \r\n    const getOption = (sales, stores) => {\r\n        return {\r\n            // title: {\r\n            //     text: 'ECharts 入门示例'\r\n            // },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: sales\r\n            }, {\r\n                name: '库存',\r\n                type: 'bar',\r\n                data: stores\r\n            }]\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Button type='primary' onClick={update}>更新</Button>\r\n            </Card>\r\n\r\n            <Card title='柱状图一'>\r\n                <ReactEcharts option={getOption(sales, stores)} />\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default function Line() {\r\n    const [sales, setSales] = useState([5, 20, 36, 10, 10, 20])// 销量的数组\r\n    const [stores, setStores] = useState([6, 10, 25, 20, 15, 10])// 库存的数组\r\n    const update = () => {\r\n        setSales(sales.map(sale => sale + 1))\r\n        setStores(stores.reduce((pre, store) => {\r\n            pre.push(store - 1)\r\n            return pre\r\n        }, []))\r\n    }\r\n   \r\n    //   返回折线图的配置对象   \r\n    const getOption = (sales, stores) => {\r\n        return {\r\n            // title: {\r\n            //     text: 'ECharts 入门示例'\r\n            // },\r\n            tooltip: {},\r\n            legend: {\r\n                data: ['销量', '库存']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'line',\r\n                data: sales\r\n            }, {\r\n                name: '库存',\r\n                type: 'line',\r\n                data: stores\r\n            }]\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Button type='primary' onClick={update}>更新</Button>\r\n            </Card>\r\n\r\n            <Card title='折线图一'>\r\n                <ReactEcharts option={getOption(sales, stores)} />\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default function Pie() {\r\n\r\n    // 返回饼图的配置对象   \r\n    const getOption1 = () => {\r\n        return {\r\n            title: {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                x: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '60%'],\r\n                    data: [\r\n                        { value: 335, name: '直接访问' },\r\n                        { value: 310, name: '邮件营销' },\r\n                        { value: 234, name: '联盟广告' },\r\n                        { value: 135, name: '视频广告' },\r\n                        { value: 1548, name: '搜索引擎' }\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    //   返回饼图的配置对象   \r\n    const getOption2 = () => {\r\n        return {\r\n            backgroundColor: '#2c343c',\r\n\r\n            title: {\r\n                text: 'Customized Pie',\r\n                left: 'center',\r\n                top: 20,\r\n                textStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n\r\n            visualMap: {\r\n                show: false,\r\n                min: 80,\r\n                max: 600,\r\n                inRange: {\r\n                    colorLightness: [0, 1]\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '50%'],\r\n                    data: [\r\n                        { value: 335, name: '直接访问' },\r\n                        { value: 310, name: '邮件营销' },\r\n                        { value: 274, name: '联盟广告' },\r\n                        { value: 235, name: '视频广告' },\r\n                        { value: 400, name: '搜索引擎' }\r\n                    ].sort(function (a, b) { return a.value - b.value; }),\r\n                    roseType: 'radius',\r\n                    label: {\r\n                        color: 'rgba(255, 255, 255, 0.3)'\r\n                    },\r\n                    labelLine: {\r\n\r\n                        lineStyle: {\r\n                            color: 'rgba(255, 255, 255, 0.3)'\r\n                        },\r\n                        smooth: 0.2,\r\n                        length: 10,\r\n                        length2: 20\r\n\r\n                    },\r\n                    itemStyle: {\r\n\r\n                        color: '#c23531',\r\n                        shadowBlur: 200,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n\r\n                    },\r\n\r\n                    animationType: 'scale',\r\n                    animationEasing: 'elasticOut',\r\n                    animationDelay: function (idx) {\r\n                        return Math.random() * 200;\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title='饼图一'>\r\n                <ReactEcharts option={getOption1()} style={{ height: 300 }} />\r\n            </Card>\r\n            <Card title='饼图二'>\r\n                <ReactEcharts option={getOption2()} style={{ height: 300 }} />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react'\r\nfunction useDebounce(fn, delay, dep=[]) {\r\n   useEffect(()=>{\r\n      let timer; \r\n      timer = setTimeout(fn, delay); \r\n      return ()=>{clearTimeout(timer);} // 这里用到useEffect清除的能力 类似于componentWillUnmount\r\n    // eslint-disable-next-line\r\n    }, [...dep]\r\n  )\r\n}\r\nexport default useDebounce","import React, { useState, useEffect } from 'react'\r\nimport { Card, Select, Input, Button, Table, message } from 'antd'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../../../components/link-button'\r\nimport { reqProducts, reqSearchProducts, reqUpdatesProductsStatus } from '../../../../api/index'\r\nimport { PAGE_SIZE } from '../../../../utils/constants'\r\nimport useDebounce from '../../../../hooks/useDebounce';\r\n\r\nconst { Option } = Select;\r\n/**\r\n * Product的默认子路由组件\r\n */\r\nexport default function ProductHome() {\r\n    const navigate = useNavigate();\r\n    const [products, setProducts] = useState([]);// 商品数组\r\n    const [total, setTotal] = useState(0);// 商品总数量\r\n    const [loading, setLoading] = useState(false);//是否正在获取数据中\r\n    const [pageNum, setPageNum] = useState(1);// 商品数组当前页码数\r\n    const [searchName, setSearchName] = useState(undefined);// 搜索内容\r\n    const [searchType, setSearchType] = useState('productName');// 搜索类型\r\n    const [productId, setProductId] = useState('');// 商品id\r\n    const [productStatus, setProductStatus] = useState(0);// 商品状态\r\n    const title = (\r\n        <span>\r\n            <Select\r\n                value={searchType}\r\n                style={{ width: 150 }}\r\n                onChange={setSearchType} //value => setsearchType(value)\r\n            >\r\n                <Option value='productName'>按名称搜索</Option>\r\n                <Option value='productDesc'>按描述搜索</Option>\r\n            </Select>\r\n            <Input\r\n                placeholder='关键字'\r\n                style={{ width: 150, margin: '0 15px' }}\r\n                value={searchName}\r\n                // 根据文档判断onChange的传值到底是什么\r\n                onChange={event => { \r\n                    // setPageNum(1); \r\n                    setSearchName(event.target.value); \r\n                    // console.log(event.target.value); \r\n                }}\r\n            />\r\n            <Button type='primary' onClick={() => { setPageNum(1);}}>搜索</Button>\r\n        </span>\r\n    )\r\n    const extra = (\r\n        <Button type='primary' onClick={() => navigate('addupdate')}>\r\n            <PlusOutlined />\r\n            添加商品\r\n        </Button>\r\n    )\r\n    const columns = [\r\n        {\r\n            title: '商品名称',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: '商品描述',\r\n            dataIndex: 'desc',\r\n        },\r\n        {\r\n            title: '价格',\r\n            dataIndex: 'price',\r\n            render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n        },\r\n        {\r\n            width: 100,\r\n            title: '状态',\r\n            // dataIndex: 'status',\r\n            render: (product) => {\r\n                const { status, _id } = product\r\n                return (\r\n                    <span>\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={() =>{setProductId(_id);(status === 1 ?setProductStatus(2):setProductStatus(1))}}\r\n                            // onClick={() => updateStatus(_id, status === 1 ? 2 : 1)}\r\n                        >\r\n                            {status === 1 ? '下架' : '上架'}\r\n                        </Button>\r\n                        <span>{status === 1 ? '在售' : '已下架'}</span>\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            width: 100,\r\n            title: '操作',\r\n            render: (product) => {\r\n                return (\r\n                    <span>\r\n                        {/*将product对象使用state传递给目标路由组件*/}\r\n                        <LinkButton onClick={() => navigate('detail', { state: product })} >\r\n                            {/* <Link to='detail'>详情</Link> */}\r\n                            详情\r\n                        </LinkButton>\r\n                        <LinkButton onClick={() => navigate('addupdate', { state: product })} >\r\n                            修改\r\n                        </LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n    // 获取指定页码的列表数据显示\r\n    const getProducts = async (pageNum) => {\r\n        console.log(1)\r\n        setLoading(true)\r\n        // console.log(searchName)\r\n        //是否有搜索内容\r\n        let result\r\n        if (searchName) {\r\n            result = await reqSearchProducts({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\r\n        } else  {//一般分页\r\n            result = await reqProducts(pageNum, PAGE_SIZE)\r\n        }\r\n        // console.log(result)\r\n        setLoading(false)\r\n        if (result.status === 0) {\r\n            const { total, list } = result.data\r\n            setProducts(list)\r\n            setTotal(total)\r\n        }\r\n\r\n    }\r\n    // 获取指定搜索内容的列表数据显示\r\n    const getProductsbySearch = async (searchName) => { \r\n        // console.log(searchName)\r\n        //是否搜索\r\n        if (searchName || searchName === '') {\r\n            console.log(1)\r\n            setLoading(true)\r\n            let result = await reqSearchProducts({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\r\n            setLoading(false)\r\n            if (result.status === 0) {\r\n                const { total, list } = result.data\r\n                setProducts(list)\r\n                setTotal(total)\r\n                setPageNum(1)\r\n            }\r\n        } \r\n        // console.log(result)\r\n    }\r\n    //   更新指定商品的状态\r\n    const updateStatus = async (status) => {\r\n        const result = await reqUpdatesProductsStatus(productId, status)\r\n        if (result.status === 0) {\r\n            message.success('更新商品成功')\r\n            getProducts(pageNum);\r\n        }\r\n    }\r\n    // eslint-disable-next-line  \r\n    useEffect(() => getProducts(pageNum), [pageNum])\r\n    // eslint-disable-next-line\r\n    useEffect(() => updateStatus(productStatus), [productStatus,productId])\r\n    useDebounce(() => getProductsbySearch(searchName), 1000, [searchName])\r\n    return (\r\n        <Card title={title} extra={extra}>\r\n            <Table\r\n                bordered\r\n                rowKey='_id'\r\n                dataSource={products}\r\n                columns={columns}\r\n                loading={loading}\r\n                pagination={{\r\n                    current: pageNum,\r\n                    total,//total:total, \r\n                    defaultPageSize: PAGE_SIZE,\r\n                    showQuickJumper: true,\r\n                    onChange: setPageNum //(pageNum) => setPageNum(pageNum)\r\n                }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Card, List} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { useNavigate,useLocation } from \"react-router-dom\"\r\nimport LinkButton from '../../../../components/link-button'\r\nimport { BASE_IMG_URL } from '../../../../utils/constants'\r\nimport {reqCategory} from '../../../../api/index'\r\nconst { Item } = List\r\n/**\r\n * Product的详情子路由组件\r\n */\r\nexport default function ProductDetail() {\r\n    const [cName1,setCName1] = useState('')//一级分类名称\r\n    const [cName2,setCName2] = useState('')//二级分类名称\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    console.log(location)\r\n    // 得到当前商品的信息 通过state传递\r\n    const {name, desc, price, detail, imgs,pCategoryId, categoryId} = location.state\r\n    const title = (\r\n        <span>\r\n            <LinkButton>\r\n                 <ArrowLeftOutlined \r\n                 style={{marginRight:10,fontSize:20}}\r\n                 onClick={() => navigate(-1)}\r\n                 />       \r\n            </LinkButton>\r\n\r\n            <span>商品详情</span>\r\n        </span>\r\n    )\r\n    // 得到当前商品的分类\r\n    const getCategory = async () => {\r\n        if(pCategoryId==='0') { // 一级分类下的商品\r\n            const result = await reqCategory(categoryId)\r\n            const cN1 = result.data.name\r\n            setCName1(cN1)\r\n          } else { // 二级分类下的商品\r\n            /*\r\n            //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n            const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n            const result2 = await reqCategory(categoryId) // 获取二级分类\r\n            const cName1 = result1.data.name\r\n            const cName2 = result2.data.name\r\n            */\r\n      \r\n            // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n            const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n            const {name:cN1} = results[0].data\r\n            const {name:cN2} = results[1].data\r\n            setCName1(cN1)\r\n            setCName2(cN2)\r\n\r\n          }\r\n    }\r\n    // eslint-disable-next-line  \r\n    useEffect(() => { getCategory() }, [])\r\n    return (\r\n        <Card title={title} className='product-detail'>\r\n            {/* 设置 List.Item 布局, 设置成 vertical 则竖直样式显示, 默认横排 */}\r\n            <List bordered itemLayout =\"vertical\" >\r\n                <Item>\r\n                    <span className=\"left\">商品名称：</span>\r\n                    <span>{name}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className=\"left\">商品描述：</span>\r\n                    <span>{desc}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className=\"left\">商品价格：</span>\r\n                    <span>{price}元</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className=\"left\">所属分类：</span>\r\n                    <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className=\"left\">商品图片：</span>\r\n                    <span >\r\n                        {\r\n                            imgs.map(img => (\r\n                                <img\r\n                                  key={img}\r\n                                  src={BASE_IMG_URL + img}\r\n                                  className=\"product-img\"\r\n                                  alt=\"img\"\r\n                                />\r\n                              ))\r\n                        }\r\n                    </span>\r\n                </Item>\r\n                <Item>\r\n                    {/* dangerouslySetInnerHTML是React为浏览器DOM提供innerHTML的替换方案。\r\n                    通常来讲，使用代码直接设置HTML存在风险，因为很容易无意中使用户暴露于跨站脚本（XSS）的攻击。\r\n                    因此，你可以直接在React中设置HTML，但当你想设置dangerouslySetInnerHTML时，\r\n                    需要向其传递包含key为__html的对象，以此来警示你。 */}\r\n                    <span className=\"left\">商品详情:</span>\r\n                    <span dangerouslySetInnerHTML={{ __html: detail }}>\r\n                    </span>\r\n                </Item>\r\n            </List>\r\n\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { BASE_IMG_URL } from \"../../../../utils/constants\";\r\nimport { reqDeleteImg } from '../../../../api/index'\r\n/**\r\n * 用于图片上传的组件\r\n */\r\n// 默认情况下，不能在函数组件上使用 ref 属性，因为它们没有实例。\r\n// 解决办法就是使用forwardRef和useImperativeHandle。\r\nconst PicturesWall = forwardRef((props, ref) => {\r\n  const { imgs } = props\r\n  // 添加时图片信息为空数组，修改时获得当前修改项的图片信息\r\n  let fileList1 = []\r\n  if (imgs && imgs.length > 0) {\r\n    fileList1 = imgs.map((img, index) => ({\r\n      uid: -index, // 每个file都有自己唯一的id\r\n      name: img, // 图片文件名\r\n      status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n      url: BASE_IMG_URL + img\r\n    }))\r\n  }\r\n  const [previewVisible, setPreviewVisible] = useState(false)// 标识是否显示大图预览Modal\r\n  const [previewImage, setPreviewImage] = useState('')// 大图的url\r\n  const [fileList, setFileList] = useState(fileList1)//图片信息\r\n\r\n  \r\n  //将子组件的方法 暴露给父组件\r\n  useImperativeHandle(ref, () => ({\r\n    getImgs\r\n  }))\r\n  // 获取所有已上传图片文件名的数组\r\n  const getImgs = () => {\r\n    return fileList.map(file => file.name)\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div>Upload</div>\r\n    </div>\r\n  );\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    setPreviewImage(file.url || file.thumbUrl)\r\n    setPreviewVisible(true)\r\n  }\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  const handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file === fileList[fileList.length - 1])\r\n    console.log(fileList)\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if (file.status === 'done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if (result.status === 0) {\r\n        message.success('上传图片成功!')\r\n        const { name, url } = result.data\r\n        file = fileList[fileList.length - 1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status === 'removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status === 0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    setFileList(fileList)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Upload\r\n        action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n        accept='image/*'  /*只接收图片格式*/\r\n        name='image' /*请求参数名*/\r\n        listType=\"picture-card\"  /*卡片样式*/\r\n        fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n      >\r\n        {fileList.length >= 4 ? null : uploadButton}\r\n      </Upload>\r\n\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n})\r\n\r\nPicturesWall.propTypes = {\r\n  imgs: PropTypes.array\r\n\r\n}\r\n\r\nexport default PicturesWall","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'//修改了其中两个下拉框的高度\r\n/**\r\n * 富文本编辑器的组件\r\n */\r\n// 默认情况下，不能在函数组件上使用 ref 属性，因为它们没有实例。\r\n// 解决办法就是使用forwardRef和useImperativeHandle。\r\nconst RichTextEditor = forwardRef((props, ref) => {\r\n  const { detail } = props\r\n  let editorState1 = EditorState.createEmpty()// 创建一个没有内容的编辑对象\r\n  if (detail) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n    const contentBlock = htmlToDraft(detail)\r\n    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n    editorState1 = EditorState.createWithContent(contentState)\r\n  } \r\n  \r\n  const [editorState,setEditorState] =useState(editorState1)\r\n\r\n  //将子组件的方法 暴露给父组件\r\n  useImperativeHandle(ref, () => ({\r\n    getDetail\r\n  }))\r\n  const getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n  // 输入过程中实时的回调\r\n  const onEditorStateChange = (editorState) => {\r\n    // console.log('onEditorStateChange()')\r\n    setEditorState(editorState)\r\n  }\r\n  const uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <Editor\r\n        editorState={editorState}\r\n        // 文本框样式\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback:uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n  )\r\n\r\n})\r\n\r\nRichTextEditor.propTypes = { \r\n  detail: PropTypes.string\r\n}\r\n\r\nexport default RichTextEditor","import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Button,\r\n    message\r\n} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { useNavigate, useLocation} from \"react-router-dom\"\r\nimport LinkButton from '../../../../components/link-button'\r\nimport { reqCateGories,reqAddOrUpdateProduct } from '../../../../api/index'\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n/*\r\n* Product的添加和更新的子路由组件\r\n*/\r\nexport default function ProductAddUpdate() {\r\n    const navigate = useNavigate()\r\n    // 在函数的内部是可以使用useRef钩子来获取组件内的DOM元素。\r\n    const pw = useRef()\r\n    const editor = useRef()\r\n\r\n    const [options, setOptions] = useState([]);\r\n \r\n    const [form] = Form.useForm();\r\n    const location = useLocation();\r\n    const isUpdate = location.state\r\n    // console.log(isUpdate)\r\n    const product = isUpdate || {}\r\n    const { pCategoryId, categoryId, imgs, detail,_id } = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if (isUpdate) {\r\n        // 商品是一个一级分类的商品\r\n        if (pCategoryId === '0') {\r\n            categoryIds.push(categoryId)\r\n        } else {\r\n            // 商品是一个二级分类的商品\r\n            categoryIds.push(pCategoryId)\r\n            categoryIds.push(categoryId)\r\n        }\r\n    }\r\n    const onFinish = async (values) => {\r\n        // console.log(values)\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = pw.current.getImgs()\r\n        const detail = editor.current.getDetail()\r\n        // console.log(imgs)\r\n        // console.log(detail)\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(isUpdate) {\r\n            product._id=_id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${isUpdate ? '更新' : '添加'}商品成功!`)\r\n          navigate(-1)\r\n        } else {\r\n          message.error(`${isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n    }\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('校验失败', errorInfo);\r\n    };\r\n    const initOptions = async (categorys) => {\r\n        // 根据categorys生成options数组\r\n        const options = categorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: false, // 不是叶子\r\n        }))\r\n        // 如果是一个二级分类商品的更新\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            // 获取对应的二级分类列表\r\n            const subCategorys = await getCategories(pCategoryId)\r\n            // 生成二级下拉列表的options\r\n            const childOptions = subCategorys.map(c => ({\r\n                value: c._id,\r\n                label: c.name,\r\n            }))\r\n            // 找到当前商品对应的一级option对象\r\n            const targetOption = options.find(option => option.value === pCategoryId)\r\n            // 关联对应的一级option上\r\n            targetOption.children = childOptions\r\n        }\r\n        // 更新options状态\r\n        setOptions(options)\r\n    }\r\n    // 异步获取一级/二级分类列表\r\n    // async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n    const getCategories = async (parentId) => {\r\n        const result = await reqCateGories(parentId);\r\n        if (result.status === 0) {\r\n            const categorys = result.data\r\n            if (parentId === '0') {\r\n                initOptions(categorys)\r\n            } else {\r\n                return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n            }\r\n\r\n        } else {\r\n            message.error('获取分类列表失败')\r\n        }\r\n    }\r\n\r\n    // 用加载下一级列表的回调函数\r\n    const loadData = async selectedOptions => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];// 得到选择的option对象\r\n        targetOption.loading = true;// 显示loading\r\n        // 根据选中的分类, 请求获取二级分类列表\r\n        const subCategorys = await getCategories(targetOption.value)\r\n        // 隐藏loading\r\n        targetOption.loading = false\r\n        // 二级分类数组有数据\r\n        if (subCategorys && subCategorys.length > 0) {\r\n            // 生成一个二级列表的options\r\n            const childOptions = subCategorys.map(c => ({\r\n                value: c._id,\r\n                label: c.name\r\n            }))\r\n            // 关联到当前option上\r\n            targetOption.children = childOptions\r\n        } else { // 当前选中的分类没有二级分类\r\n            targetOption.isLeaf = true\r\n        }\r\n\r\n        setOptions([...options]);\r\n\r\n    };\r\n    useEffect(() => {\r\n        getCategories('0')\r\n        form.setFieldsValue({\r\n            name: product.name,\r\n            desc: product.desc,\r\n            price: product.price,\r\n            categoryIds\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    const title = (\r\n        <span>\r\n            <LinkButton>\r\n                <ArrowLeftOutlined\r\n                    style={{ marginRight: 10, fontSize: 20 }}\r\n                    onClick={() => navigate(-1)}\r\n                />\r\n            </LinkButton>\r\n\r\n            <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n        </span>\r\n    )\r\n    return (\r\n        <Card title={title} >\r\n            <Form\r\n                form={form}\r\n                labelCol={{ span: 2 }} //左侧label宽度\r\n                wrapperCol={{ span: 8 }}//右侧包裹宽度\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Item\r\n                    name='name'\r\n                    label=\"商品名称\"\r\n                    rules={[{ required: true, message: '必须输入商品名称' }]}\r\n\r\n                >\r\n                    <Input placeholder='请输入商品名称' />\r\n                </Item>\r\n                <Item\r\n                    name='desc'\r\n                    label=\"商品描述\"\r\n                    rules={[{ required: true, message: '必须输入商品描述' }]}\r\n                >\r\n                    <TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />\r\n                </Item>\r\n                <Item\r\n                    name='price'\r\n                    label=\"商品价格\"\r\n                    rules={[\r\n                        { required: true, message: '必须输入商品价格' },\r\n                        {\r\n                            validator: (_, value) => {\r\n                                if (value && value * 1 <= 0) {\r\n                                    return Promise.reject(new Error('价格必须大于0'));\r\n                                } else {\r\n                                    return Promise.resolve();\r\n                                }\r\n                            }\r\n                        }]}\r\n                >\r\n                    <Input type='number' placeholder='请输入商品价格' addonAfter='元' />\r\n                </Item>\r\n                <Item\r\n                    name='categoryIds'\r\n                    label=\"商品分类\"\r\n                    rules={[{ required: true, message: '必须输入商品分类' }]}\r\n                >\r\n                    <Cascader placeholder='请指定商品分类' options={options} loadData={loadData} />\r\n                </Item>\r\n\r\n                <Item label=\"商品图片\">\r\n                    <PicturesWall ref={pw} imgs={imgs} />\r\n                </Item>\r\n                <Item label=\"商品详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 18 }}>\r\n                    <RichTextEditor ref={editor} detail={detail}/>\r\n                </Item>\r\n                <Item>\r\n                    <Button type='primary' htmlType=\"submit\" >提交</Button>\r\n                </Item>\r\n            </Form>\r\n\r\n\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\n// 引入路由组件\r\nimport Login from './pages/login'\r\nimport Admin from './pages/admin'\r\nimport NotFound from './pages/not-found'\r\nimport User from './pages/admin/user'\r\nimport Category from './pages/admin/category'\r\nimport Home from './pages/admin/home'\r\nimport Product from './pages/admin/product'\r\nimport Role from './pages/admin/role'\r\nimport Bar from './pages/admin/charts/bar'\r\nimport Line from './pages/admin/charts/line'\r\nimport Pie from './pages/admin/charts/pie'\r\nimport ProductHome from './pages/admin/product/home'\r\nimport ProductDetail from './pages/admin/product/detail'\r\nimport ProductAddUpdate from './pages/admin/product/add-update'\r\n/**\r\n *  根组件(函数式)\r\n */\r\nexport default function App() {\r\n    return (\r\n\r\n        // React-Router v6新特性 <Switch>重命名为<Routes></Routes> \r\n        // component重命名为element\r\n        // 中小型项目嵌套路由可集中显示，在需要显示的地方使用<Outlet />作为占位符\r\n        // 若分别显示，具有后代路由（在其他组件中定义）的路由在其路径中使用尾随* \r\n        // index 表示主路由\r\n        // v6中不再支持 v5 中的 <Redirect> 元素作为路由配置的一部分（在 <Routes> 内）\r\n        <Routes>\r\n            <Route path='login' element={<Login />}></Route>\r\n            <Route path='/' element={<Admin />}>\r\n                <Route index element={<Home />} />\r\n                <Route path='category' element={<Category />} />\r\n                <Route path='product' element={<Product />}>\r\n                    <Route index element={<ProductHome />} />\r\n                    <Route path='detail' element={<ProductDetail />} />\r\n                    <Route path='addupdate' element={<ProductAddUpdate />} />\r\n                </Route>\r\n                <Route path='user' element={<User />} />\r\n                <Route path='role' element={<Role />} />\r\n                <Route path=\"charts-bar\" element={<Bar />} />\r\n                <Route path=\"charts-pie\" element={<Pie />} />\r\n                <Route path=\"charts-line\" element={<Line />} />    \r\n            </Route>\r\n            {/* 以上路径都不匹配时 */}\r\n            <Route path='*' element={<NotFound />} />\r\n        </Routes>\r\n\r\n    )\r\n}\r\n","// 入口js\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import { BrowserRouter} from 'react-router-dom'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport App from './App'\r\nimport 'antd/dist/antd.less'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n// React解析组件标签，找到了App组件。\r\n// 发现组件是使用函数定义的，随后调用该函数，将返回的虚拟DOM转为真实DOM，随后呈现在页面中。\r\n// 为配合gh page显示,打包暂时使用HashRouter\r\nReactDOM.render(\r\n    // <BrowserRouter>\r\n    //     <App />\r\n    // </BrowserRouter>,\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\ndocument.getElementById('root'))"],"sourceRoot":""}